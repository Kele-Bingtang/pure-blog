(window.webpackJsonp=window.webpackJsonp||[]).push([[239],{565:function(t,a,s){"use strict";s.r(a);var e=s(3),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#说明"}},[t._v("说明")])]),a("li",[a("a",{attrs:{href:"#tupleutils-以及函数式接口"}},[t._v("TupleUtils 以及函数式接口")])]),a("li",[a("a",{attrs:{href:"#mathflux-的数学操作符"}},[t._v("MathFlux 的数学操作符")])]),a("li",[a("a",{attrs:{href:"#重复与重试工具"}},[t._v("重复与重试工具")])]),a("li",[a("a",{attrs:{href:"#调度器"}},[t._v("调度器")])])])]),a("p"),t._v(" "),a("h2",{attrs:{id:"说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#说明"}},[t._v("#")]),t._v(" 说明")]),t._v(" "),a("p",[a("code",[t._v("reactor-extra")]),t._v(" 为满足 "),a("code",[t._v("reactor-core")]),t._v(" 用户的更高级需求，提供了一些额外的操作符和工具。")]),t._v(" "),a("p",[t._v("由于这是一个单独的包，使用时需要明确它的依赖：")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("dependencies "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     compile 'io"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("projectreactor"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("reactor"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("core'\n     compile 'io"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("projectreactor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("addons"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("reactor"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("extra' "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("ol",[a("li",[t._v("添加 reactor-extra 的依赖。参考 "),a("RouterLink",{attrs:{to:"/reactor/quick-start/#获取-reactor"}},[t._v("获取 Reactor")]),t._v(" 了解为什么使用BOM的情况下不需要指定 version。")],1)]),t._v(" "),a("h2",{attrs:{id:"tupleutils-以及函数式接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tupleutils-以及函数式接口"}},[t._v("#")]),t._v(" "),a("code",[t._v("TupleUtils")]),t._v(" 以及函数式接口")]),t._v(" "),a("p",[t._v("在 Java 8 提供的函数式接口基础上，"),a("code",[t._v("reactor.function")]),t._v(" 包又提供了一些支持 3 到 8 个值的 "),a("code",[t._v("Function")]),t._v("、"),a("code",[t._v("Predicate")]),t._v(" 和 "),a("code",[t._v("Consumer")]),t._v("。")]),t._v(" "),a("p",[a("code",[t._v("TupleUtils")]),t._v(" 提供的静态方法可以方便地用于将相应的 "),a("code",[t._v("Tuple")]),t._v(" 函数式接口的 lambda 转换为更简单的接口。")]),t._v(" "),a("p",[t._v("这使得我们在使用 "),a("code",[t._v("Tuple")]),t._v(" 中各成员的时候更加容易，比如：")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tuple "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" firstName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tuple"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getT1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" lastName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tuple"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getT2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" address "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tuple"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getT3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Customer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("firstName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lastName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" address"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("可以用下面的方式代替：")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TupleUtils")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Customer")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("因为 "),a("code",[t._v("Customer")]),t._v(" 的构造方法符合 "),a("code",[t._v("Consumer3")]),t._v(" 的函数式接口标签。")]),t._v(" "),a("h2",{attrs:{id:"mathflux-的数学操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mathflux-的数学操作符"}},[t._v("#")]),t._v(" "),a("code",[t._v("MathFlux")]),t._v(" 的数学操作符")]),t._v(" "),a("p",[a("code",[t._v("reactor.math")]),t._v(" 包的 "),a("code",[t._v("MathFlux")]),t._v(" 提供了一些用于数学计算的操作符，如 "),a("code",[t._v("max")]),t._v("、"),a("code",[t._v("min")]),t._v("、"),a("code",[t._v("sumInt")]),t._v("、"),a("code",[t._v("averageDouble")]),t._v("…")]),t._v(" "),a("h2",{attrs:{id:"重复与重试工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重复与重试工具"}},[t._v("#")]),t._v(" 重复与重试工具")]),t._v(" "),a("p",[a("code",[t._v("reactor.retry")]),t._v(" 包中有一些能够帮助实现 "),a("code",[t._v("Flux#repeatWhen")]),t._v(" 和 "),a("code",[t._v("Flux#retryWhen")]),t._v(" 的工具。入口点（entry points）就是 "),a("code",[t._v("Repeat")]),t._v(" 和 "),a("code",[t._v("Retry")]),t._v(" 接口的工厂方法。")]),t._v(" "),a("p",[t._v("两个接口都可用作可变的构建器（mutative builder），并且相应的实现（implementing） 都可作为 "),a("code",[t._v("Function")]),t._v(" 用于对应的操作符。")]),t._v(" "),a("h2",{attrs:{id:"调度器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调度器"}},[t._v("#")]),t._v(" 调度器")]),t._v(" "),a("p",[t._v("Reactor-extra 提供了若干专用的调度器： - "),a("code",[t._v("ForkJoinPoolScheduler")]),t._v("，位于 "),a("code",[t._v("reactor.scheduler.forkjoin")]),t._v(" 包； - "),a("code",[t._v("SwingScheduler")]),t._v("，位于 "),a("code",[t._v("reactor.swing")]),t._v(" 包； - "),a("code",[t._v("SwtScheduler")]),t._v("，位于 "),a("code",[t._v("reactor.swing")]),t._v(" 包。")])])}),[],!1,null,null,null);a.default=n.exports}}]);