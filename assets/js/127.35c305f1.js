(window.webpackJsonp=window.webpackJsonp||[]).push([[127],{449:function(s,a,t){"use strict";t.r(a);var n=t(3),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"gc-分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gc-分类"}},[s._v("#")]),s._v(" GC 分类")]),s._v(" "),a("p",[s._v("针对 HotSpot VM 的实现，它里面的 GC 按照回收区域又分为两大种类型：一种是部分收集（Partial GC），一种是整堆收集（Full GC）")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("部分收集（Partial GC）：不是完整收集整个 Java 堆的垃圾收集。其中又分为：")]),s._v(" "),a("ul",[a("li",[s._v("新生代收集（Minor GC / Young GC）：只是新生代（Eden / S0，S1）的垃圾收集")]),s._v(" "),a("li",[s._v("老年代收集（Major GC / Old GC）：只是老年代的垃圾收集。目前，只有 CMS GC 会有单独收集老年代的行为。"),a("mark",[s._v("注意，很多时候 Major GC 会和 Full GC 混淆使用，需要具体分辨是老年代回收还是整堆回收")])])])]),s._v(" "),a("li",[a("p",[s._v("混合收集（Mixed GC）：收集整个新生代以及部分老年代的垃圾收集。目前，只有 G1 GC 会有这种行为")])]),s._v(" "),a("li",[a("p",[s._v("整堆收集（Full GC）：收集整个 java 堆和方法区的垃圾收集")])])]),s._v(" "),a("p",[s._v("哪些情况会触发 Full GC？")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("老年代空间不足")])]),s._v(" "),a("li",[a("p",[s._v("方法区空间不足")])]),s._v(" "),a("li",[a("p",[s._v("显式调用 "),a("code",[s._v("System.gc()")])])]),s._v(" "),a("li",[a("p",[s._v("Minor GC 进入老年代的数据的平均大小大于老年代的可用内存")])]),s._v(" "),a("li",[a("p",[s._v("大对象直接进入老年代，而老年代的可用内存不足")])])]),s._v(" "),a("h2",{attrs:{id:"gc-日志分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gc-日志分类"}},[s._v("#")]),s._v(" GC 日志分类")]),s._v(" "),a("p",[a("strong",[s._v("Minor GC")])]),s._v(" "),a("p",[s._v("Minor GC（或 Young GC 或 YGC）日志：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("GC")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Allocation")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Failure")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PSYoungGen")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("31744")]),s._v("K"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2192")]),s._v("K "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("36864")]),s._v("K"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("31744")]),s._v("K"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2200")]),s._v("K "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("121856")]),s._v("K"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0139308")]),s._v(" secs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Times")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" user"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.05")]),s._v(" sys"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.01")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" real"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.01")]),s._v(" secs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/Java/20220201230157.png",alt:"image-20220201230156081"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/Java/20220201230127.png",alt:"image-20210506202156090"}})]),s._v(" "),a("p",[a("strong",[s._v("Full GC")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Full")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("GC")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Metadata")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("GC")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Threshold")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PSYoungGen")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5104")]),s._v("K"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("K "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("132096")]),s._v("K"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Par01dGen")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("416")]),s._v("K"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5453")]),s._v("K "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("50176")]),s._v("K"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5520")]),s._v("K"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5453")]),s._v("K "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("182272")]),s._v("K"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Metaspace")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20637")]),s._v("K"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20637")]),s._v("K "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1067008")]),s._v("K"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0245883")]),s._v(" secs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Times")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" user"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.06")]),s._v(" sys"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.00")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" real"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.02")]),s._v(" secs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/Java/20220201230220.png",alt:"image-20220201230218472"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/Java/20220201230225.png",alt:"image-20210506202349072"}})]),s._v(" "),a("h2",{attrs:{id:"gc-日志结构剖析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gc-日志结构剖析"}},[s._v("#")]),s._v(" GC 日志结构剖析")]),s._v(" "),a("h3",{attrs:{id:"透过日志看垃圾收集器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#透过日志看垃圾收集器"}},[s._v("#")]),s._v(" 透过日志看垃圾收集器")]),s._v(" "),a("ul",[a("li",[a("p",[s._v('Serial 收集器：新生代显示 "[DefNew"，即 Default New Generation')])]),s._v(" "),a("li",[a("p",[s._v('ParNew 收集器：新生代显示 "[ParNew"，即 Parallel New Generation')])]),s._v(" "),a("li",[a("p",[s._v('Parallel Scavenge 收集器：新生代显示 "[PSYoungGen"，JDK1.7 使用的即 PSYoungGen')])]),s._v(" "),a("li",[a("p",[s._v('Parallel Old 收集器：老年代显示 "[ParoldGen"')])]),s._v(" "),a("li",[a("p",[s._v('G1 收集器：显示 "garbage-first heap"')])])]),s._v(" "),a("h3",{attrs:{id:"透过日志看gc原因"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#透过日志看gc原因"}},[s._v("#")]),s._v(" 透过日志看GC原因")]),s._v(" "),a("ul",[a("li",[s._v("Allocation Failure：表明本次引起 GC 的原因是因为新生代中没有足够的区域存放需要分配的数据")]),s._v(" "),a("li",[s._v("Metadata GCThreshold：Metaspace 区不够用了")]),s._v(" "),a("li",[s._v("FErgonomics：JVM 自适应调整导致的 GC")]),s._v(" "),a("li",[s._v("System：调用了 "),a("code",[s._v("System.gc()")]),s._v(" 方法")])]),s._v(" "),a("h3",{attrs:{id:"透过日志看gc前后情况"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#透过日志看gc前后情况"}},[s._v("#")]),s._v(" 透过日志看GC前后情况")]),s._v(" "),a("p",[s._v("通过图示，我们可以发现 GC 日志格式的规律一般都是：GC 前内存占用 -＞ GC 后内存占用（该区域内存总大小）")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PSYoungGen")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5986")]),s._v("K"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("696")]),s._v("K "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8704")]),s._v("K"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5986")]),s._v("K"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("704")]),s._v("K "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9216")]),s._v("K"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[a("p",[s._v("中括号内：GC 回收前年轻代堆大小，回收后大小，（年轻代堆总大小）")])]),s._v(" "),a("li",[a("p",[s._v("括号外：GC 回收前年轻代和老年代大小，回收后大小，（年轻代和老年代总大小）")])])]),s._v(" "),a("p",[a("mark",[s._v("注意")]),s._v("：Minor GC 堆内存总容量 = 9/10 年轻代 + 老年代。原因是 Survivor 区只计算 from 部分，而 JVM 默认年轻代中 Eden 区和 Survivor 区的比例关系，Eden:S0:S1=8:1:1。")]),s._v(" "),a("h3",{attrs:{id:"透过日志看gc时间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#透过日志看gc时间"}},[s._v("#")]),s._v(" 透过日志看GC时间")]),s._v(" "),a("p",[s._v("GC 日志中有三个时间：user，sys 和 real")]),s._v(" "),a("ul",[a("li",[s._v("user：进程执行用户态代码（核心之外）所使用的时间。"),a("strong",[s._v("这是执行此进程所使用的实际 CPU 时间")]),s._v("，其他进程和此进程阻塞的时间并不包括在内。在垃圾收集的情况下，表示 GC 线程执行所使用的 CPU 总时间")]),s._v(" "),a("li",[s._v("sys：进程在内核态消耗的 CPU 时间，"),a("strong",[s._v("即在内核执行系统调用或等待系统事件所使用的 CPU 时间")])]),s._v(" "),a("li",[s._v("real：程序从开始到结束所用的时钟时间。这个时间包括其他进程使用的时间片和进程阻塞的时间（比如等待 I/O 完成）。对于并行 gc，这个数字应该接近（用户时间＋系统时间）除以垃圾收集器使用的线程数")])]),s._v(" "),a("p",[s._v("由于多核的原因，一般的 GC 事件中，real time 是小于 sys time ＋ user time 的，因为一般是多个线程并发的去做 GC，所以 real time 是要小于 sys ＋ user time 的。如果 real ＞ sys ＋ user 的话，则你的应用可能存在下列问题：IO 负载非常重或 CPU 不够用。")]),s._v(" "),a("h3",{attrs:{id:"minor-gc日志分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#minor-gc日志分析"}},[s._v("#")]),s._v(" Minor GC日志分析")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("GC")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Allocation")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Failure")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PSYoungGen")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("31744")]),s._v("K"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("2192K")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("36864")]),s._v("K"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("31744")]),s._v("K"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("2200K")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("121856")]),s._v("K"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("，"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0139308")]),s._v(" secs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Times")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" user"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.05")]),s._v(" sys"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.01")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("real"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.01")]),s._v(" secs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("分析上方代码块的 Minor GC 日志：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("2020-11-20T17:19:43.265-0800：日志打印时间日期格式如2013-05-04T21:53:59.234+0800")])]),s._v(" "),a("li",[a("p",[s._v("0.822:：GC 发生时，Java 虚拟机启动以来经过的秒数")])]),s._v(" "),a("li",[a("p",[s._v("[GC (Allocation Failure)：发生了一次垃圾回收，这是一次 Minor Gc。它不区分新生代 GC 还是老年代 GC，括号里的内容是 GC 发生的原因，这里的 Allocation Failure 的原因是新生代中没有足够区域能够存放需要分配的数据而失败。")])]),s._v(" "),a("li",[a("p",[s._v("[PSYoungGen: 76800K->8433K(89600K)]：")]),s._v(" "),a("ul",[a("li",[s._v("PSYoungGen：表示 GC 发生的区域，区域名称与使用的 GC 收集器是密切相关的\n"),a("ul",[a("li",[s._v("Serial 收集器：Default New Generation 显示 DefNew")]),s._v(" "),a("li",[s._v("ParNew 收集器：ParNew")]),s._v(" "),a("li",[s._v("Parallel Scanvenge 收集器：PSYoung")]),s._v(" "),a("li",[s._v("老年代和新生代同理，也是和收集器名称相关")])])]),s._v(" "),a("li",[s._v("76800K->8433K(89600K)：GC 前该内存区域已使用容量 -> GC 后该区域容量（该区域总容量）\n"),a("ul",[a("li",[s._v("如果是新生代，总容量则会显示整个新生代内存的 9/10，即 Eden + From/To 区")]),s._v(" "),a("li",[s._v("如果是老年代，总容量则是全部内存大小，无变化")])])])])]),s._v(" "),a("li",[a("p",[s._v("76800K->8449K(294400K)：在显示完区域容量 GC 的情况之后，会接着显示整个堆内存区域的 GC 情况：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("GC 前堆内存已使用容量 -> GC 堆内存容量（堆内存总容量）")]),s._v(" "),a("p",[s._v("堆内存总容量 = 9/10 新生代 + 老年代 < 初始化的内存大小")])])])]),s._v(" "),a("li",[a("p",[s._v("，0.0088371 secs]：整个 GC 所花费的时间，单位是秒")])]),s._v(" "),a("li",[a("p",[s._v("[Times: user=0.02 sys=0.01, real=0.01 secs]：")]),s._v(" "),a("ul",[a("li",[s._v("user：指的是 CPU 工作在用户态所花费的时间")]),s._v(" "),a("li",[s._v("sys：指的是 CPU 工作在内核态所花费的时间")]),s._v(" "),a("li",[s._v("real：指的是在此次 GC 事件中所花费的总时间")])])])]),s._v(" "),a("h3",{attrs:{id:"full-gc日志分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#full-gc日志分析"}},[s._v("#")]),s._v(" Full GC日志分析")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("T17")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("43.794")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0800")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.351")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FULL")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("GC")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("METADATA")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("GC")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("THRESHOLD")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PSYOUNGGEN")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10082")]),s._v("K "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("K "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("89600")]),s._v("K"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PAROLDGEN")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),s._v("K "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("9638K")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("204800")]),s._v("K"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10114")]),s._v("K "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("9638K")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("294400")]),s._v("K"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("METASPACE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20158")]),s._v("K"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("20156K")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1067008")]),s._v("K"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0285388")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SECS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TIMES")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("USER")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.11")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SYS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.00")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("REAL")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.03")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SECS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("分析上方代码块的 Full GC 日志：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("2020-11-20T17:19:43.794-0800：日志打印时间日期格式如：2013-05-04T21:53:59.234+0800")])]),s._v(" "),a("li",[a("p",[s._v("1.351：GC 发生时，Java 虚拟机启动以来经过的秒数")])]),s._v(" "),a("li",[a("p",[s._v("Full GC(Metadata GC Threshold)：")]),s._v(" "),a("ul",[a("li",[s._v("发生了一次垃圾回收，这是一次 FULL GC。它不区分新生代 GC 还是老年代 GC")]),s._v(" "),a("li",[s._v("括号里的内容是 GC 发生的原因，这里的 MetadataGC Threshold 的原因是 Metaspace 区不够用了\n"),a("ul",[a("li",[s._v("Full GC (Ergonomics)：JVM 自适应调整导致的 GC")]),s._v(" "),a("li",[s._v("Full GC (System)：调用了 "),a("code",[s._v("System.gc()")]),s._v(" 方法")])])])])]),s._v(" "),a("li",[a("p",[s._v("[PSYoungGen: 10082K->0K(89600K)]：")]),s._v(" "),a("ul",[a("li",[s._v("PSYoungGen：表示 GC 发生的区域，区域名称与使用的 GC 收集器是密切相关的\n"),a("ul",[a("li",[s._v("Serial 收集器：Default New Generation 显示 DefNew")]),s._v(" "),a("li",[s._v("ParNew 收集器：ParNew")]),s._v(" "),a("li",[s._v("Parallel Scanvenge 收集器：PSYoung")]),s._v(" "),a("li",[s._v("老年代和新生代同理，也是和收集器名称相关")])])]),s._v(" "),a("li",[s._v("10082K ->0K (89600K)：GC 前该内存区域已使用容量 -> GC 后该区域容量（该区域总容量）\n"),a("ul",[a("li",[s._v("如果是新生代，总容量则会显示整个新生代内存的 9/10，即 Eden + From/To 区")]),s._v(" "),a("li",[s._v("如果是老年代，总容量则是全部内存大小，无变化")])])])])]),s._v(" "),a("li",[a("p",[s._v("[PAROLDGEN: 32K -> 9638K(204800K)]：老年代区域没有发生 GC，因为本次 GC 是 Metaspace 引起的")])]),s._v(" "),a("li",[a("p",[s._v("10114K ->9638K(294400K)：在显示完区域容量 GC 的情况之后，会接着显示整个堆内存区域的 GC 情况：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("GC 前堆内存已使用容量 -> GC 堆内存容量（堆内存总容量）")]),s._v(" "),a("p",[s._v("堆内存总容量 = 9/10 新生代 + 老年代 < 初始化的内存大小")])])])]),s._v(" "),a("li",[a("p",[s._v("[METASPACE: 20158K->20156K(1067008K)]：Metaspace GC 回收 2K 空间")])]),s._v(" "),a("li",[a("p",[s._v("0.0285388 SECS：整个 GC 所花费的时间，单位是秒")])]),s._v(" "),a("li",[a("p",[s._v("[Times: user=0.11 sys=0.00,real=0.03 secs]：")]),s._v(" "),a("ul",[a("li",[s._v("user：指的是 CPU 工作在用户态所花费的时间")]),s._v(" "),a("li",[s._v("sys：指的是 CPU 工作在内核态所花费的时间")]),s._v(" "),a("li",[s._v("real：指的是在此次 GC 事件中所花费的总时间")])])])]),s._v(" "),a("h2",{attrs:{id:"gc-日志分析工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gc-日志分析工具"}},[s._v("#")]),s._v(" GC 日志分析工具")]),s._v(" "),a("p",[a("strong",[s._v("GCEasy")])]),s._v(" "),a("blockquote",[a("p",[s._v("官网地址："),a("code",[s._v("https://gceasy.io/")])])]),s._v(" "),a("p",[s._v("GCEasy 是一款在线的 GC 日志分析器，可以通过 GC 日志分析进行内存泄露检测、GC 暂停原因分析、JVM 配置建议优化等功能，大多数功能是免费的。")]),s._v(" "),a("p",[a("strong",[s._v("GCViewer")])]),s._v(" "),a("blockquote",[a("p",[s._v("源码下载："),a("code",[s._v("https://github.com/chewiebug/GCViewer")])]),s._v(" "),a("p",[s._v("运行版本下载："),a("code",[s._v("https://github.com/chewiebug/GCViewer/wiki/Changelog")])])]),s._v(" "),a("p",[s._v("GCViewer 是一款离线的 GC 日志分析器，用于可视化 Java VM 选项 "),a("code",[s._v("-verbose:gc")]),s._v(" 和 .NET 生成的数据 "),a("code",[s._v("-Xloggc:<file>")]),s._v("。还可以计算与垃圾回收相关的性能指标（吞吐量、累积的暂停、最长的暂停等）。当通过更改世代大小或设置初始堆大小来调整特定应用程序的垃圾回收时，此功能非常有用。")]),s._v(" "),a("p",[a("strong",[s._v("GChisto")])]),s._v(" "),a("ul",[a("li",[s._v("官网上没有下载的地方，需要自己从 SVN 上拉下来编译")]),s._v(" "),a("li",[s._v("不过这个工具似乎没怎么维护了，存在不少 bug")])]),s._v(" "),a("p",[a("strong",[s._v("HPjmeter")])]),s._v(" "),a("ul",[a("li",[s._v("工具很强大，但是只能打开由以下参数生成的 GC log，-verbose:gc -Xloggc:gc.log。添加其他参数生成的 gc.log 无法打开")]),s._v(" "),a("li",[s._v("HPjmeter 集成了以前的 HPjtune 功能，可以分析在 HP 机器上产生的垃圾回收日志文件")])])])}),[],!1,null,null,null);a.default=e.exports}}]);