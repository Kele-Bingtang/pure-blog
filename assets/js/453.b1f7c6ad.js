(window.webpackJsonp=window.webpackJsonp||[]).push([[453],{781:function(s,t,a){"use strict";a.r(t);var n=a(3),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("div",{staticClass:"custom-block note"},[t("p",{staticClass:"custom-block-title"},[s._v("笔记")]),s._v(" "),t("p",[s._v("如果你不打算部署在 Github Pages 或者 Gitee Pages 上，而是部署在自己的服务器上，又或者三个都想自动同步部署，那么本内容就是带你如何在服务器部署项目，同时也有 Docker 的一次实战。")]),s._v(" "),t("div",{staticClass:"custom-block right"},[t("p",[s._v("2021-11-03 @Young Kbt")])])]),s._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#原理介绍"}},[s._v("原理介绍")])]),t("li",[t("a",{attrs:{href:"#环境准备"}},[s._v("环境准备")])]),t("li",[t("a",{attrs:{href:"#环境安装"}},[s._v("环境安装")])]),t("li",[t("a",{attrs:{href:"#环境用户"}},[s._v("环境用户")])]),t("li",[t("a",{attrs:{href:"#环境启动"}},[s._v("环境启动")]),t("ul",[t("li",[t("a",{attrs:{href:"#nginx启动"}},[s._v("Nginx启动")])]),t("li",[t("a",{attrs:{href:"#php启动"}},[s._v("PHP启动")])])])]),t("li",[t("a",{attrs:{href:"#环境配置"}},[s._v("环境配置")]),t("ul",[t("li",[t("a",{attrs:{href:"#nginx配置"}},[s._v("Nginx配置")])]),t("li",[t("a",{attrs:{href:"#php配置"}},[s._v("PHP配置")])])])]),t("li",[t("a",{attrs:{href:"#环境重启"}},[s._v("环境重启")])]),t("li",[t("a",{attrs:{href:"#环境测试"}},[s._v("环境测试")])]),t("li",[t("a",{attrs:{href:"#git环境"}},[s._v("Git环境")]),t("ul",[t("li",[t("a",{attrs:{href:"#宿主机配置git"}},[s._v("宿主机配置Git")])]),t("li",[t("a",{attrs:{href:"#php容器配置git"}},[s._v("PHP容器配置Git")])]),t("li",[t("a",{attrs:{href:"#项目访问"}},[s._v("项目访问")])])])]),t("li",[t("a",{attrs:{href:"#自动化部署"}},[s._v("自动化部署")]),t("ul",[t("li",[t("a",{attrs:{href:"#gitee脚本"}},[s._v("Gitee脚本")])]),t("li",[t("a",{attrs:{href:"#github脚本"}},[s._v("Github脚本")])]),t("li",[t("a",{attrs:{href:"#webhook配置"}},[s._v("WebHook配置")])])])]),t("li",[t("a",{attrs:{href:"#问答"}},[s._v("问答")])])])]),t("p"),s._v(" "),t("h2",{attrs:{id:"原理介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原理介绍"}},[s._v("#")]),s._v(" 原理介绍")]),s._v(" "),t("p",[s._v("实现服务器自动化部署，我们使用的是 WebHook 技术，这个技术 Github 和 Gitee 都有，不难理解。")]),s._v(" "),t("p",[s._v("首先要知道为什么使用 WebHook？如果我每次克隆项目，需要手动实现 "),t("code",[s._v("git clone")]),s._v(" 命令，但是每次别人 push 新代码，我必须手动克隆或者拉取最新的代码，那么有没有一种技术，别人 push 新代码，我发个呆，然后 push 的新代码自动被我的服务器克隆下来呢。这个技术就是 WebHook。")]),s._v(" "),t("p",[s._v("WebHook 可以理解为一个仓库的触发器。")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("什么时候这个触发器被触发呢：由你决定，可以在 push 新代码之后，可以在分支合并之后")])]),s._v(" "),t("li",[t("p",[s._v("触发的内容是什么：WebHook 会主动发送一个 POST 请求到你配置的地址，这个地址是我们服务器的脚本。一旦请求我们写的脚本，就会触发脚本，脚本里的内容就是执行 "),t("code",[s._v("git clone")]),s._v(" 等命令拉取仓库代码")])])]),s._v(" "),t("p",[s._v("所以总结就是：当我们 push 项目到仓库，仓库触发 WebHook，发送 POST 请求到我们的服务器，这个请求触发我们写的脚本，脚本执行 "),t("code",[s._v("git clone")]),s._v(" 等命令拉取项目代码。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/%E5%85%B3%E4%BA%8E/%E5%85%B3%E4%BA%8E%E6%9C%AC%E7%AB%99/20211209173736.png",alt:"image-20211209173735568"}})]),s._v(" "),t("p",[s._v("所以确保提供给 GitHub 或 Gitee 的请求能访问并触发编写的脚本。而如何访问并触发脚本，就是本内容要介绍的。")]),s._v(" "),t("h2",{attrs:{id:"环境准备"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#环境准备"}},[s._v("#")]),s._v(" 环境准备")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("CentOS 系统（其他系统也可以）")])]),s._v(" "),t("li",[t("p",[s._v("一个普通用户（强烈建议）")])]),s._v(" "),t("li",[t("p",[s._v("Docker 容器（可选）")])]),s._v(" "),t("li",[t("p",[s._v("OpenResty，可以理解为 Nginx 和 Lua 的集成，使用 Nginx 也可以")])]),s._v(" "),t("li",[t("p",[s._v("PHP 环境（PHP 脚本必须）")])])]),s._v(" "),t("p",[s._v("注意：这里是使用 Docker 容器进行管理，如果没用过或者不打算用 Docker，也可以参考：Docker 是一个容器，容器里的每一个环境可以理解为一个 CentOS 系统，比如 Docker 里的 Nginx 就是一个安装了 Nginx 的 CentOS 系统，Docker 里的 PHP 就是安装了 PHP 的 CentOS 系统。（实际上不完全是 CentOS 系统，取决于供应商的设计，这里为了解释说明）")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/%E5%85%B3%E4%BA%8E/%E5%85%B3%E4%BA%8E%E6%9C%AC%E7%AB%99/20211209120859.png",alt:"image-20211203123853405"}})]),s._v(" "),t("p",[s._v("有人疑惑了，可不可以在 Docker 里的 Nginx 环境安装 PHP，毕竟 Nginx 所在的也是一个 CentOS 系统，额(⊙﹏⊙)，不建议，还是老老实实安装 PHP 吧。Docker 的出现就是为了隔离每一个环境，但是又不影响彼此的联系。")]),s._v(" "),t("p",[s._v("如果你不使用 Docker，请下意识把 Docker 这一层因素去掉即可。关于 Nginx 和 PHP 的步骤是完全一样，不会因为 Docker 而被影响。")]),s._v(" "),t("p",[s._v("我是先进入服务器，然后从服务器进入 Docker，接着从 Docker 进入 Nginx 和 PHP。而你不用 Docker，只需要进入服务器即可，因为不用 Dcoerk，Nginx 和 PHP 就处在服务器里。")]),s._v(" "),t("h2",{attrs:{id:"环境安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#环境安装"}},[s._v("#")]),s._v(" 环境安装")]),s._v(" "),t("p",[s._v("关于 Docker 的安装，我已经写在 Docker 的知识体系中，"),t("RouterLink",{attrs:{to:"/docker/install/"}},[s._v("点击传送")]),s._v("。")],1),s._v(" "),t("p",[s._v("关于 OpenResty（Nginx）在 Docker 安装，我已经写在 Nginx 的知识体系中，"),t("RouterLink",{attrs:{to:"/nginx/modules/#docker安装"}},[s._v("点击传送")]),s._v("。")],1),s._v(" "),t("p",[s._v("如果你已经安装过 Docker，并且 Docker 里安装了 OpenResty 或者 Nginx，则不需要重新安装。")]),s._v(" "),t("div",{staticClass:"custom-block note"},[t("p",{staticClass:"custom-block-title"},[s._v("笔记")]),s._v(" "),t("p",[s._v("这里再次说明，没接触过 OpenResty 的也不慌，这里的它的作用就是 Nginx 的作用，所以本文提到的 OpenResty，请在脑海里替换为 Nginx 即可。")]),s._v(" "),t("div",{staticClass:"custom-block right"},[t("p",[s._v("2021-11-03 @Young Kbt")])])]),s._v(" "),t("p",[s._v("安装完 Docker 和 OpenResty（Nginx）后，我们需要下载 PHP 镜像，服务器部署的脚本是使用 PHP 编写，所以需要 PHP 的运行环境。")]),s._v(" "),t("p",[s._v("查看 PHP 版本 "),t("a",{attrs:{href:"https://registry.hub.docker.com/_/php?tab=tags",target:"_blank",rel:"noopener noreferrer"}},[s._v("传送门"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("建议下载带有 "),t("code",[s._v("fpm")]),s._v(" 的版本，我下载的是 7.3-fpm 版本。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://img.shields.io/badge/PHP-7.3%20fpm-blue",alt:""}})]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" pull php:7.3.33-fpm\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"环境用户"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#环境用户"}},[s._v("#")]),s._v(" 环境用户")]),s._v(" "),t("p",[s._v("强烈建议 Nginx、PHP 或者其他的容器不要用 root 用户，这里创建一个普通用户来进行操作，这也是实际生产上需要做的。")]),s._v(" "),t("p",[s._v("创建 kbt 普通用户（用户名自己决定）")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("useradd")]),s._v(" kbt\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("passwd")]),s._v(" kbt\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 然后这里填 kbt 用户的密码")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("将 kbt 用户放入 docker 组，这样 kbt 用户才能使用 docker 的相关命令（如果不用 docker，请忽略）")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("usermod")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-a")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-G")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" kbt  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将 kbt 用户加入到 docker 用户组中")]),s._v("\n\nsystemctl restart "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启 docker")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("-a 是追加，普通用户加入 docker 组后，不会退出原来所在的组。")]),s._v(" "),t("p",[s._v("-G 是指定组名。")]),s._v(" "),t("h2",{attrs:{id:"环境启动"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#环境启动"}},[s._v("#")]),s._v(" 环境启动")]),s._v(" "),t("p",[s._v("安装完 Docker、OpenResty 或 Nginx、PHP 后，接下来就启动它们。")]),s._v(" "),t("p",[s._v("Docker 的启动很简单，但是也很麻烦，简单在于命令是固定的，麻烦在于数据卷的考虑，到底放在宿主机的哪个路径下。")]),s._v(" "),t("p",[t("strong",[s._v("如果不用 docker，请忽略。")])]),s._v(" "),t("h3",{attrs:{id:"nginx启动"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx启动"}},[s._v("#")]),s._v(" Nginx启动")]),s._v(" "),t("p",[s._v("OpenResty 或 Nginx 的启动时，需要将配置文件目录、静态文件目录、日志文件目录给挂载出来，方便备份和修改。")]),s._v(" "),t("p",[t("strong",[s._v("这里只是说明我的路径，你的路径请根据你的需求修改，只需要修改路径即可。")])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("Nginx 的配置文件挂载在 "),t("code",[s._v("/docker/openresty/conf")]),s._v(" 目录下")])]),s._v(" "),t("li",[t("p",[s._v("Nginx 的静态文件目录挂载在 "),t("code",[s._v("/docker/openresty/html")]),s._v(" 目录下")])]),s._v(" "),t("li",[t("p",[s._v("Nginx 的日志文件目录挂载在 "),t("code",[s._v("/docker/openresty/logs")]),s._v(" 目录下")])])]),s._v(" "),t("p",[s._v("因为我打算把所有的挂载目录都放在 "),t("code",[s._v("/docker")]),s._v(" 目录下，如 node 镜像挂载目录是 "),t("code",[s._v("/docker/node")]),s._v("，tomcat 镜像挂载目录在 "),t("code",[s._v("/docker/tomcat")]),s._v(" ...... 类推")]),s._v(" "),t("p",[s._v("首先创建根路径：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" /docker/openresty\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("这里说明一下，我们需要把 Nginx 容器里的这些目录拷贝出来，为什么呢？因为一旦挂载成功，"),t("strong",[s._v("宿主机的目录会覆盖容器的目录")]),s._v("，想想此时刚刚创建的宿主机的目录都为空，一旦挂载后，容器里的目录被覆盖，也为空。所以我们事先从容器拿出这些目录，放到根路径下，再挂载，这样覆盖的目录就是拷贝出来的目录。")]),s._v(" "),t("p",[s._v("先简单启动一个 OpenResty 容器。容器名叫 nginx，启动的镜像名是 OpenResty，版本为 latest。")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--name")]),s._v(" nginx OpenResty:latest\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("将容器需要的挂载目录拷贝出来")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" nginx:/etc/nginx/conf.d /docker/openresty/conf\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" nginx:/usr/local/openresty/nginx/html /docker/openresty/html\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" nginx:/usr/local/openresty/nginx/logs /docker/openresty/logs\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("我拷贝的 conf.d 目录是 "),t("strong",[s._v("简易版")]),s._v(" 配置文件所在的目录，并将 conf.d 改为 conf，你可以不改，我只是不喜欢 .d。而静态文件目录和日志文件目录名不变。")]),s._v(" "),t("p",[t("strong",[s._v("完整版")]),s._v(" 的配置文件在容器的 "),t("code",[s._v("/usr/local/openresty/nginx/conf")]),s._v(" 路径下，文件名叫 "),t("code",[s._v("nginx.conf")]),s._v("。")]),s._v(" "),t("p",[t("strong",[s._v("为什么不使用完整版？")])]),s._v(" "),t("p",[s._v("「简易版」只能写 server 块，「完整版」不仅可以写 server 块，还能写 http 块。因为「完整版」的 http 块利用 "),t("code",[s._v("include")]),s._v(" 指令引入「简易版」配置文件所在的目录，所以我们只需要在「简易版」目录下添加任意 .conf 文件，则自动会被引入到「完整版」，避免直接修改「完整版」引起安全问题。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/%E5%85%B3%E4%BA%8E/%E5%85%B3%E4%BA%8E%E6%9C%AC%E7%AB%99/20211209145843.png",alt:"image-20211209145837681"}})]),s._v(" "),t("p",[s._v("拿出来三个目录后就可以删除这个容器，为完整版的容器做准备。")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" nginx\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("启动最终版的 OpenResty 容器前，我们需要创建一个网桥，避免过多的容器积压在默认网桥上，也为了 Nginx 能和 PHP 等容器进行通信。")]),s._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[s._v("网桥就是网络，我喜欢称呼网桥")]),s._v(" "),t("p",[s._v("默认网桥无法直接通信，必须使用 IP 或者 "),t("code",[s._v("--link")]),s._v(" 进行通信，所以很麻烦，我们就创建一个网桥，解决所有问题。如果还不懂，请看原理："),t("RouterLink",{attrs:{to:"/docker/network/#为什么不使用默认的网桥"}},[s._v("点击跳转")])],1),s._v(" "),t("div",{staticClass:"custom-block right"},[t("p",[s._v("2021-11-09 @Young Kbt")])])]),s._v(" "),t("p",[s._v("创建一个叫做 web 的网桥")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" network create web\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("最后启动 OpenResty  容器，实现挂载")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--name")]),s._v(" nginx "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v(":80 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--restart")]),s._v(" always "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-v")]),s._v(" /docker/openresty/conf:/etc/nginx/conf.d "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-v")]),s._v(" /docker/openresty/html:/usr/local/openresty/nginx/html "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-v")]),s._v(" /docker/openresty/logs:/usr/local/openresty/nginx/logs "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-v")]),s._v(" /home/kbt:/home/kbt "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--network")]),s._v(" web --network-alias nginx "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\nOpenResty:latest\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[t("code",[s._v("/home/kbt")]),s._v(" 是后面 PHP 环境需要，因为 PHP 不允许 root 用户操作，所以我们使用前面创建的 kbt 用作为操作 PHP 的权限用户。")]),s._v(" "),t("p",[t("code",[s._v("--network-alias")]),s._v(" 是给所在的网桥起个别名，这个别名是自己所在网桥的一种标识，方便相同网桥的其他容器如 Nginx 通过别名找到你。尽量和容器名一致。")]),s._v(" "),t("h3",{attrs:{id:"php启动"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#php启动"}},[s._v("#")]),s._v(" PHP启动")]),s._v(" "),t("p",[s._v("PHP 容器启动很简单，我们需要注意的是 PHP 脚本的「住处」，我把脚本放在 "),t("code",[s._v("/home/kbt")]),s._v(" 处，因为 PHP 环境使用 kbt 用户，所以脚本也要放在 kbt 用户的目录下，防止外界恶意访问执行脚本，引起严重后果。")]),s._v(" "),t("p",[s._v("如果你是 xxx 用户，则请将脚本放在 "),t("code",[s._v("/home/xxx")]),s._v(" 目录下。")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--name")]),s._v(" php "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-v")]),s._v(" /home/kbt:/home/kbt "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--network")]),s._v(" web --network-alias php php:7.3-fpm\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("Ngxin 启动的时候也挂载了这个 "),t("code",[s._v("/home/kbt")]),s._v(" 目录。")]),s._v(" "),t("p",[s._v("此时 "),t("code",[s._v("/home/kbt")]),s._v(" 目录相当于一个「中转站」，连接着 Nginx 和 PHP，这样 Nginx 就能通过这个「中转站」访问 PHP 的脚本了。当然这样直接访问还远远不够，我们还需要在 Nginx 的配置文件进行配置，指定 PHP 的脚本在 "),t("code",[s._v("home/kbt")]),s._v(" 下。")]),s._v(" "),t("h2",{attrs:{id:"环境配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#环境配置"}},[s._v("#")]),s._v(" 环境配置")]),s._v(" "),t("p",[s._v("我们需要修改 Nginx 的用户权限为 kbt，以及 PHP 的用户权限也为 kbt，这样为了防止外界恶意访问 Nginx，植入恶意脚本，因为 root 的权限太大，拥有了 root 权限，容易被植入恶意脚本。所以不要一味的追求 root。")]),s._v(" "),t("p",[t("strong",[s._v("不要忽略这一步，哪怕你不用 docker，你只需要把 docker 相关的命令无视掉。")])]),s._v(" "),t("h3",{attrs:{id:"nginx配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx配置"}},[s._v("#")]),s._v(" Nginx配置")]),s._v(" "),t("p",[s._v("我们需要配置 Nginx 的用户权限、PHP 脚本的访问路径、以及静态资源的缓存等。")]),s._v(" "),t("blockquote",[t("p",[t("strong",[s._v("配置 PHP 脚本的访问路径")])])]),s._v(" "),t("p",[s._v("首先打开 "),t("code",[s._v("/docker/openresty/conf")]),s._v(" 的「简易版」配置文件，名字叫 "),t("code",[s._v("default.conf")])]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /docker/openresty/conf/default.conf\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("添加如下内容：")]),s._v(" "),t("div",{staticClass:"language-nginx line-numbers-mode"},[t("div",{staticClass:"highlight-lines"},[t("br"),t("br"),t("br"),t("br"),t("br"),t("div",{staticClass:"highlighted"},[s._v(" ")]),t("div",{staticClass:"highlighted"},[s._v(" ")]),t("div",{staticClass:"highlighted"},[s._v(" ")]),t("div",{staticClass:"highlighted"},[s._v(" ")]),t("div",{staticClass:"highlighted"},[s._v(" ")]),t("div",{staticClass:"highlighted"},[s._v(" ")]),t("div",{staticClass:"highlighted"},[s._v(" ")]),t("br"),t("br"),t("br")]),t("pre",{pre:!0,attrs:{class:"language-nginx"}},[t("code",[t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("listen")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server_name")]),s._v(" 你的服务器域名")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ...... 其他配置")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("location")]),s._v(" ~ \\.php$")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 访问 .php 后缀的请求")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("root")]),s._v("           /home/kbt")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 脚本的根目录")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fastcgi_pass")]),s._v("   php:9000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 通过 php 网桥别名的 9000 端口连接上 PHP容器")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fastcgi_index")]),s._v("  index.php")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认首页")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fastcgi_param")]),s._v("  SCRIPT_FILENAME  /home/kbt"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$fastcgi_script_name")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 脚本的根目录")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("include")]),s._v("        fastcgi_params")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ...... 其他配置")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[s._v("第 7 行改为 "),t("code",[s._v("/home/kbt")]),s._v(" 目录，这是我们放置脚本的根目录。")]),s._v(" "),t("p",[s._v("第 8 行的 "),t("code",[s._v("php")]),s._v(" 就是我们启动 PHP 容器指定的网桥别名，Nginx 和 PHP 都处于 web 网桥，那么可以通过网桥别名找到彼此。9000 是 PHP 容器的默认端口。")]),s._v(" "),t("p",[s._v("第 9 行的 "),t("code",[s._v("/home/kbt$fastcgi_script_name")]),s._v(" 指的是，启动 PHP 环境来运行 "),t("code",[s._v("/home/kbt")]),s._v(" 目录下的脚本，否则脚本无法启动。如果你不是 "),t("code",[s._v("/home/kbt")]),s._v("，则自行修改。")]),s._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[s._v("注意")]),s._v(" "),t("p",[s._v("不能在 "),t("code",[s._v("$fastcgi")]),s._v(" 前加 "),t("code",[s._v("/")]),s._v("。")]),s._v(" "),t("div",{staticClass:"custom-block right"},[t("p",[s._v("2021-11-09 @Young Kbt")])])]),s._v(" "),t("p",[t("strong",[s._v("如果不使用 docker，则内容为")])]),s._v(" "),t("div",{staticClass:"language-nginx line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-nginx"}},[t("code",[t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("listen")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server_name")]),s._v(" 你的服务器域名")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ...... 其他配置")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("location")]),s._v(" ~ \\.php$")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    \t"),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("proxy_pass")]),s._v("   http://127.0.0.1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("location")]),s._v(" ~ \\.php$")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("root")]),s._v("           /home/kbt")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fastcgi_pass")]),s._v("   localhost:9000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fastcgi_index")]),s._v("  index.php")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fastcgi_param")]),s._v("  SCRIPT_FILENAME  /home/kbt"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$fastcgi_script_name")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 脚本的根目录")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("include")]),s._v("        fastcgi_params")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ...... 其他配置")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])]),t("p",[s._v("先转发到本地（127.0.0.1），然后触发 12 行的 localhost，找到 9000 端口的 PHP 环境。")]),s._v(" "),t("blockquote",[t("p",[t("strong",[s._v("安装 vim")])])]),s._v(" "),t("p",[s._v("因为 Nginx 容器并不带 vim 和 vi 命令，所以我们需要安装 vim，安装前需要更新 "),t("code",[s._v("apt-get")]),s._v("（容器没有 yum）")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进入 Nginx 容器")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-it")]),s._v(" nginx "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("下载前需要修改下载源为国内源，默认的国外源太慢。")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进入 apt-get 配置目录")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /etc/apt\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行备份命令，避免修改失败无法使用")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" sources.list sources.list.bak\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 同时执行 echo下的 4 行命令，修改成国内镜像源")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("sources.list "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"deb http://ftp2.cn.debian.org/debian/ buster main"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v("sources.list "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"deb http://ftp2.cn.debian.org/debian/debian-security buster/updates main"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v("sources.list "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"deb http://ftp2.cn.debian.org/debian/debian buster-updates main"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v("sources.list\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行更新命令 apt-get update")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" update\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 下载 vim")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-y")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("p",[s._v("你可以将安装完 vim 的新容器，变成新的镜像，不然每次启动初始的镜像，都要更新 "),t("code",[s._v("apt-get")]),s._v(" 和安装 vim")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" commit nginx nginx:1.0\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("第一个 nginx 是打包的容器名，而 "),t("code",[s._v("nginx:1.0")]),s._v(" 则是打包成新镜像的名字和版本。构建新镜像后，可以把初始的镜像删除掉，保留也可以。")]),s._v(" "),t("blockquote",[t("p",[t("strong",[s._v("配置 Nginx 用户权限和缓存等。")])])]),s._v(" "),t("p",[s._v("进入 Nginx 容器")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-it")]),s._v(" nginx "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("创建 kbt 用户，设置密码，要和宿主机创建的用户保持一致")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("groupadd")]),s._v(" kbt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("useradd")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-g")]),s._v(" kbt kbt "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建用户，并加入组，都是 kbt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("passwd")]),s._v(" kbt\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 然后这里填 kbt 用户的密码")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("创建完用户后，接着修改「完整版」配置文件")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /usr/local/openresty/nginx/conf/nginx.conf\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("将 user 改为 kbt，")]),s._v(" "),t("div",{staticClass:"language-nginx line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-nginx"}},[t("code",[t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("user")]),s._v(" kbt")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("如图：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/%E5%85%B3%E4%BA%8E/%E5%85%B3%E4%BA%8E%E6%9C%AC%E7%AB%99/20211209155656.png",alt:"image-20211209155655575"}})]),s._v(" "),t("p",[s._v("顺便配置一下优化代码，提高 Nginx 的访问效率。")]),s._v(" "),t("p",[s._v("在 events 块添加：（已经存在的 events 块）")]),s._v(" "),t("div",{staticClass:"language-nginx line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-nginx"}},[t("code",[t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("events")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("worker_connections")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t \n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("accept_mutex")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("on")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t\t\t "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开启 Nginx 网络连接序列化")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("multi_accept")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("on")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t\t\t "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开启同时接收多个网络连接")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("use")]),s._v(" epoll")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t\t\t\t\t "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用 epoll 函数来优化 Nginx")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/%E5%85%B3%E4%BA%8E/%E5%85%B3%E4%BA%8E%E6%9C%AC%E7%AB%99/20211209155936.png",alt:"image-20211209155935175"}})]),s._v(" "),t("p",[s._v("在 http 块添加：（已经存在的 http 块）")]),s._v(" "),t("div",{staticClass:"language-nginx line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-nginx"}},[t("code",[t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("http")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ...... 其他配置")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sendfile")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("on")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t\t\t\t "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开启高效的文件传输模式")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("tcp_nopush")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("on")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t\t\t\t "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 提升网络包的传输「效率」")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("tcp_nodelay")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("on")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t\t\t\t "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 高网络包传输的「实时性」")]),s._v("\n    \n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("keepalive_timeout")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("65")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t\t "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 连接超时时间")]),s._v("\n    \n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("gzip")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("on")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  \t\t\t   \t\t "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开启 Gzip 功能")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("gzip_types")]),s._v(" *")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t\t   \t \t "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 压缩源文件类型,根据具体的访问资源类型设定")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("gzip_comp_level")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t   \t\t "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Gzip 压缩级别")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("gzip_min_length")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1k")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进行压缩响应页面的最小长度，content-length")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("gzip_buffers")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("16K")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 缓存空间大小")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("gzip_http_version")]),s._v(" 1.1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定压缩响应所需要的最低 HTTP 请求版本")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("gzip_vary")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("on")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t\t         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 往头信息中添加压缩标识")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("gzip_disable")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"MSIE [1-6]\\."')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 对 IE6 以下的版本都不进行压缩")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("gzip_proxied")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("off")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("           "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Nginx 作为反向代理压缩服务端返回数据的条件")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ...... 其他配置")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("h3",{attrs:{id:"php配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#php配置"}},[s._v("#")]),s._v(" PHP配置")]),s._v(" "),t("blockquote",[t("p",[t("strong",[s._v("创建普通用户")])])]),s._v(" "),t("p",[s._v("首先进入 PHP 容器")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-it")]),s._v(" php "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("创建 kbt 用户，设置密码，要和宿主机创建的用户保持一致")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("groupadd")]),s._v(" kbt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("useradd")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-g")]),s._v(" kbt kbt "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建用户，并加入组，都是 kbt")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("passwd")]),s._v(" kbt\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 然后这里填 kbt 用户的密码")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("blockquote",[t("p",[t("strong",[s._v("安装 vim")])])]),s._v(" "),t("p",[s._v("我已经在 Ngixn 配置写了如何安装 vim，请按照 Nginx 配置的安装 vim，进行安装，就在上面不远处。")]),s._v(" "),t("blockquote",[t("p",[t("strong",[s._v("配置 PHP 环境的用户权限")])])]),s._v(" "),t("p",[s._v("修改配置文件的用户")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /usr/local/etc/php-fpm.d/www.conf\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("大概在 23 - 24 行，改为：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("user "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" kbt\ngroup "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" kbt\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/%E5%85%B3%E4%BA%8E/%E5%85%B3%E4%BA%8E%E6%9C%AC%E7%AB%99/20211209161348.png",alt:"image-20211209161347606"}})]),s._v(" "),t("h2",{attrs:{id:"环境重启"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#环境重启"}},[s._v("#")]),s._v(" 环境重启")]),s._v(" "),t("div",{staticClass:"custom-block note"},[t("p",{staticClass:"custom-block-title"},[s._v("笔记")]),s._v(" "),t("p",[s._v("重启按顺序：PHP、Nginx，因为 Nginx 配置文件依赖 PHP 脚本，所以先启动 PHP，再启动 Nginx。")]),s._v(" "),t("div",{staticClass:"custom-block right"},[t("p",[s._v("2021-11-09 @Younng Kbt")])])]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" restart php\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" restart nginx\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h2",{attrs:{id:"环境测试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#环境测试"}},[s._v("#")]),s._v(" 环境测试")]),s._v(" "),t("p",[s._v("测试 Nginx 是否能访问 PHP 脚本，我们在宿主机的 "),t("code",[s._v("/home/kbt")]),s._v("，创建 index.php 文件")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /home/kbt/index.php\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("添加内容：")]),s._v(" "),t("div",{staticClass:"language-php line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-php"}},[t("code",[t("span",{pre:!0,attrs:{class:"token php language-php"}},[t("span",{pre:!0,attrs:{class:"token delimiter important"}},[s._v("<?")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("phpinfo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token delimiter important"}},[s._v("?>")])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("然后访问你的网站："),t("code",[s._v("ip:port/index.php")]),s._v("，如图：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/%E5%85%B3%E4%BA%8E/%E5%85%B3%E4%BA%8E%E6%9C%AC%E7%AB%99/20211209163151.png",alt:"image-20211209163149655"}})]),s._v(" "),t("p",[s._v("此时 "),t("code",[s._v("/home/kbt")]),s._v(" 就是你 PHP 脚本的根路径，如果你想对 PHP 脚本分类，可以在根路径下创建一个文件夹，如我创建 test 文件夹，将 index.php 放入该文件夹里，接着访问的时候，加上文件夹名即可。如下：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/%E5%85%B3%E4%BA%8E/%E5%85%B3%E4%BA%8E%E6%9C%AC%E7%AB%99/20211209163416.png",alt:"image-20211209163414807"}})]),s._v(" "),t("h2",{attrs:{id:"git环境"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git环境"}},[s._v("#")]),s._v(" Git环境")]),s._v(" "),t("p",[s._v("环境准备就绪，现在进入正题。我们需要安装 Git，来实现自动部署。")]),s._v(" "),t("p",[s._v("分别在宿主机和 PHP 容器安装 Git")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("宿主机安装 Git 是为了配置 SSH 公钥")]),s._v(" "),t("p",[s._v("不理解公钥？我们克隆的项目地址有 HTTPS 方式，也有 SSH 方式。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/%E5%85%B3%E4%BA%8E/%E5%85%B3%E4%BA%8E%E6%9C%AC%E7%AB%99/20211209164354.png",alt:"image-20211209164353563"}})]),s._v(" "),t("p",[s._v("而 SSH 方式需要配置公钥，我们在自己的服务器生成 SSH 公钥，然后交给 Github 或者 Gitee，这样它们才能通过公钥「连接」我们的服务器。才能拉取项目。")])]),s._v(" "),t("li",[t("p",[s._v("PHP 容器安装 Git 是因为我们执行 PHP 脚本，然后 PHP 容器会根据脚本使用 Git 拉取仓库的项目。")])])]),s._v(" "),t("blockquote",[t("p",[t("strong",[s._v("为什么不在 PHP 容器配置公钥？")])])]),s._v(" "),t("p",[s._v("一个服务器可以生成一个公钥，尽量不要在容器内生成，因为服务器的公钥是公用的，任何容器都可以使用。但是只在一个容器内生产，其他容器可能出现无法使用的问题。")]),s._v(" "),t("h3",{attrs:{id:"宿主机配置git"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#宿主机配置git"}},[s._v("#")]),s._v(" 宿主机配置Git")]),s._v(" "),t("p",[s._v("宿主机安装 Git，可以直接使用 yum 来下载")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("yun "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-y")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("查看 Git 版本")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--version")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("配置全局用户信息")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--global")]),s._v(" user.name "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"你的用户名"')]),s._v(" \t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义全局的用户名")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--global")]),s._v(" user.email "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"你的邮箱"')]),s._v(" \t\t "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义全局的邮件地址")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--list")]),s._v(" \t\t\t\t\t\t\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看配置信息是否成功")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("切换 kbt 用户")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("su")]),s._v(" kbt\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("div",{staticClass:"custom-block danger"},[t("p",{staticClass:"custom-block-title"},[s._v("警告")]),s._v(" "),t("p",[s._v("必须切换 kbt 用户，因为我们 PHP 环境使用的是 kbt 用户，拉取代码时，不仅验证 SSH 公钥，也会验证生成 SSH 公钥的用户名。")]),s._v(" "),t("p",[s._v("如果是 root 用户配置公钥，则 PHP 容器没有权限拉取 Git 项目。")]),s._v(" "),t("div",{staticClass:"custom-block right"},[t("p",[s._v("2021-11-09 @Young Kbt")])])]),s._v(" "),t("p",[s._v("生成公钥（确保已经切换了和 PHP 环境一致的用户）")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("ssh-keygen "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" rsa "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-C")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xxx@xx.com"')]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 填写正确的你的邮箱")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("按三次回车即可生成 SSH 公钥。")]),s._v(" "),t("p",[s._v("生成 SSH 公钥后，会告诉你生成的目录："),t("code",[s._v("Your public key has been saved in /home/lkbt/.ssh/id_rsa.pub.")])]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /home/kbt/.ssh/id_rsa.pub\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("查看文件后获取（复制）SSH 公钥，添加到 Github 或者 Gitee 中。如果不知道如何添加，请看 "),t("RouterLink",{attrs:{to:"/about/website/deploy/#配置密钥"}},[s._v("配置 SSH Key")]),s._v("，该内容有三步，配置 SSH 公钥在第二步。")],1),s._v(" "),t("p",[s._v("验证是否配置生效")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-T")]),s._v(" git@github.com    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# GitHub")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-T")]),s._v(" git@gitee.com\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Gitee")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("建议 Github 和 Gitee 都配置 SSH 公钥。")]),s._v(" "),t("h3",{attrs:{id:"php容器配置git"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#php容器配置git"}},[s._v("#")]),s._v(" PHP容器配置Git")]),s._v(" "),t("p",[s._v("首先进入 PHP 容器")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-it")]),s._v(" php "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("确保你的 "),t("code",[s._v("apt-get")]),s._v(" 已经是最新的，如果不是，请更新。因为 "),t("code",[s._v("apt-get")]),s._v(" 初始版本库里的 Git 版本很低。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("apt-get update\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("安装 Git")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-y")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("查看 Git 版本")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--version")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("配置全局用户信息")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--global")]),s._v(" user.name "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"你的用户名"')]),s._v(" \t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义全局的用户名")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--global")]),s._v(" user.email "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"你的邮箱"')]),s._v(" \t\t "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义全局的邮件地址")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--list")]),s._v(" \t\t\t\t\t\t\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看配置信息是否成功")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("初次使用，先克隆一次项目，放在 "),t("code",[s._v("/home/kbt")]),s._v(" 目录下")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("cd /home/kbt\ngit clone -b ga-pages <仓库 SSH 地址>\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[t("code",[s._v("-b")]),s._v(" 指定克隆的分支。不指定默认是默认分支 master。")]),s._v(" "),t("div",{staticClass:"custom-block danger"},[t("p",{staticClass:"custom-block-title"},[s._v("警告")]),s._v(" "),t("p",[s._v("建议在 PHP 容器克隆项目，或者在宿主机切换到 kbt 用户再克隆项目，如果在宿主机以 root 用户克隆项目，那么 PHP 容器将没有权限操作这个项目。")]),s._v(" "),t("div",{staticClass:"custom-block right"},[t("p",[s._v("2021-11-11 @Young Kbt")])])]),s._v(" "),t("h3",{attrs:{id:"项目访问"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#项目访问"}},[s._v("#")]),s._v(" 项目访问")]),s._v(" "),t("p",[s._v("此时你访问你的服务器，会发现访问不了你克隆的项目，因为项目克隆在 "),t("code",[s._v("/home/kbt")]),s._v(" 目录下，而这个目录目前仅仅是 PHP 脚本的根路径，不是非 PHP 脚本的路径，我们还需要修改 Nginx 的配置文件，让它跳转到这个目录。")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /docker/openresty/conf/default.conf\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("假设我的项目名是 notes，则配置一个 localtion。")]),s._v(" "),t("div",{staticClass:"language-nginx line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-nginx"}},[t("code",[t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("listen")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server_name")]),s._v(" 你的服务器域名")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("location")]),s._v(" /notes")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    \t"),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("root")]),s._v(" /home/kbt")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# /notes 会拼接到这后面")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(" index.html")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认访问 idnex.html 页面")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("此时访问你的服务器 "),t("code",[s._v("ip:port/notes")]),s._v("，Nginx 就会去 "),t("code",[s._v("/home/kbt")]),s._v(" 下找到 notes 目录，然后在这个目录下获取 idnex.html 页面返回，你就会成功看到你的项目页面。")]),s._v(" "),t("h2",{attrs:{id:"自动化部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自动化部署"}},[s._v("#")]),s._v(" 自动化部署")]),s._v(" "),t("p",[s._v("我们使用的是 webhook 技术。")]),s._v(" "),t("p",[s._v("这里使用 PHP 脚本进行自动化部署，用到 PHP 的 shell_exec 函数，而开放 shell_exec 这个 PHP 函数是非常危险的，因此切记不要在生产环境开放这个函数，更加不能用 root 权限去执行 PHP。当然我们只是简单的个人博客，不是什么大公司，所以危害很低。")]),s._v(" "),t("p",[s._v("我们首先在 "),t("code",[s._v("/home/kbt")]),s._v(" 目录下创建一个文件夹，专门存储 webhook 的 PHP 脚本。比如叫 deploy。")]),s._v(" "),t("p",[s._v("在 deploy 文件夹下创建 PHP 脚本")]),s._v(" "),t("h3",{attrs:{id:"gitee脚本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gitee脚本"}},[s._v("#")]),s._v(" Gitee脚本")]),s._v(" "),t("div",{staticClass:"language-php line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-php"}},[t("code",[t("span",{pre:!0,attrs:{class:"token php language-php"}},[t("span",{pre:!0,attrs:{class:"token delimiter important"}},[s._v("<?php")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$git")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"git"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 默认是用 Git 全局变量，有的环境可能要指明具体安装路径")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$source")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"Gitee"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 项目仓库源，如 GitHub 或 Gitee")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$branch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"gh-pages"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 指定仓库分支，为空就是 master 分支")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$logName")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"logs/deploy"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 本地日志名称，与当前 php 文件在同一目录，不需要加 .log")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$savePath")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"/home/kbt/deploy"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 网站根目录，初次克隆确保目录为空")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$gitSSHPath")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"git@gitee.com:kele-bingtang/notes-blog.git"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 代码仓库 SSH 地址")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$password")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"你在 WebHook 设置的密码"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// WebHook 设置的密码")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$name")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"你的用户名"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 仓库用户名")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$email")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"你的邮箱"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 用户仓库邮箱")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$isCloned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置是否已经 clone 到本地。true：已经 clone,直接 pull，false：先 clone")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$is_test")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 测试模式，无需密码。true 打开，平时 false 关闭")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果已经 clone 过，则直接拉去代码")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$isCloned")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$requestBody")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file_get_contents")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"php://input"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取请求体的数据")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("empty")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$requestBody")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("empty")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$is_test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// empty(var) 如果 var 为空或 false，则返回 true")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("die")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'发送到仓库的请求失败'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// die 代表输出一条消息，并退出当前脚本")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 解析发过来的 JSON 信息")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$content")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("json_decode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$requestBody")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 若是指定的分支且提交数大于 0，且密码正确")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$content")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'password'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$password")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("empty")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$is_test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$content")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'total_commits_count'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("empty")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$is_test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$content")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'ref'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"refs/heads/'),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$branch")])]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$branch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("empty")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$is_test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$res_log")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"------------------------- [PULL START] -------------------------"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PHP_EOL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// PHP_EOL 是换行符")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$cmd")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"rm -rf '),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$savePath")])]),s._v(" && "),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$git")])]),s._v(" clone -b "),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$branch")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$gitSSHPath")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$savePath")])]),s._v(" && echo '拉取项目并部署成功'\"")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$result")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shell_exec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$cmd")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// shell_exec 关键命令，执行拉取代码")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("empty")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$is_test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                    "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$res_log")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'Y-m-d H:i:s'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'执行测试！'")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PHP_EOL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// .= 代表追加到后面，不会覆盖前面")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                    "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$res_log")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"["')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'Y-m-d H:i:s'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("time")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'] - 拉取 '")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$content")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'repository'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'name'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("' 仓库的 '")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$content")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'ref'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("' 分支代码进行部署'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PHP_EOL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$result")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                    "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$result")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"拉取项目失败"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PHP_EOL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$res_log")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"[项目源] - '),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$source")])]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PHP_EOL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$res_log")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"[执行命令] - "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$cmd")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PHP_EOL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$res_log")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"[结果] - "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$result")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$res_log")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"-------------------------- [PULL END] --------------------------"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PHP_EOL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$res_log")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PHP_EOL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PHP_EOL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file_put_contents")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$logName")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('".log"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$res_log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FILE_APPEND")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 写入日志")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$result")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file_put_contents")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$logName")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('".log"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'[Gitee] 密码错误!'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PHP_EOL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FILE_APPEND")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'密码错误！'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果没有 clone，则先克隆代码")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$res")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"[ CLONE START ----------------- ]"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PHP_EOL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果配置全局信息过，则会覆盖")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$res")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shell_exec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$git")])]),s._v(" config --global user.email "),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$email")])]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PHP_EOL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$res")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shell_exec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$git")])]),s._v(" config --global user.name "),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$name")])]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PHP_EOL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$res")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shell_exec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$git")])]),s._v(" clone "),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$gitSSHPath")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$savePath")])]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PHP_EOL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$res")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"[ CLONE END ----------------- ]"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PHP_EOL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file_put_contents")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$logName")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('".log"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$res")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FILE_APPEND")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 写入日志")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token delimiter important"}},[s._v("?>")])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br")])]),t("p",[s._v("具体的内容我已经都注释好了，同时也会生成日志文件，第 39 - 44 都是输入日志的数据，你可以适当根据喜好修改。")]),s._v(" "),t("p",[t("strong",[s._v("相信我，你只需要修改第 3 - 11 行的数据为你的数据即可，我把需要的变量都拿出来了，其他不会出错。")])]),s._v(" "),t("p",[s._v("29 行代码是核心命令，该脚本执行这个命令，去克隆仓库代码。所以这也是为什么 PHP 环境要安装 Git，不然无法克隆。")]),s._v(" "),t("p",[s._v("说明一下 29 行代码为什么要这样写，因为我们的博客是打包后生成的一大堆 html、css、js 文件，源码修改一点内容，打包后都会引起这些文件的位置、内容变化，所以我们需要把原来克隆的项目删除掉，再重新克隆。")]),s._v(" "),t("p",[s._v("有人想，能不能执行 "),t("code",[s._v("git pull")]),s._v(" 命令，只拉取最新的代码，这里告诉你，我测试过了，哪怕我提交到仓库的打包项目没有任何修改， pull 下来的代码全是和原来的代码冲突，需要手动处理合并。想想就麻烦，所以只能先删除再克隆新的。")]),s._v(" "),t("p",[s._v("如果你 "),t("code",[s._v("git pull")]),s._v(" 成功，请留言告诉我，可能我当初的方法不对。")]),s._v(" "),t("h3",{attrs:{id:"github脚本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#github脚本"}},[s._v("#")]),s._v(" Github脚本")]),s._v(" "),t("div",{staticClass:"language-php line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-php"}},[t("code",[t("span",{pre:!0,attrs:{class:"token php language-php"}},[t("span",{pre:!0,attrs:{class:"token delimiter important"}},[s._v("<?php")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$git")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"git"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 默认是用 Git 全局变量，有的环境可能要指明具体安装路径")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$source")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"GitHub"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 项目仓库源，如 GitHub 或 Gitee")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$branch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"gh-pages"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 指定仓库分支，为空就是 master 分支")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$logName")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"logs/deploy"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 本地日志名称，与当前 php 文件在同一目录，不需要加 .log")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$savePath")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"/home/kbt/deploy"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 网站根目录，初次克隆确保目录为空")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$gitSSHPath")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"git@github.com:Kele-Bingtang/notes-blog.git"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 代码仓库 SSH 地址")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$password")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"你在 WebHook 设置的密码"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// WebHook 设置的密码")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$name")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"你的用户名"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 仓库用户名")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$email")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"你的邮箱"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 用户仓库邮箱")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$isCloned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置是否已经 clone 到本地。true：已经 clone,直接 pull，false：先 clone")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$is_test")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 测试模式，无需密码。true 打开，平时 false 关闭")]),s._v("\n    \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果已经 clone 过，则直接拉去代码")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$isCloned")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$requestBody")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file_get_contents")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"php://input"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取请求体的数据")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("empty")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$requestBody")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("empty")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$is_test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// empty(var) 如果 var 为空或 false，则返回 true")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("die")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'发送到仓库的请求失败'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// die 代表输出一条消息，并退出当前脚本")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取 GitHub 的加密令牌 Secret")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$signature")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$_SERVER")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'HTTP_X_HUB_SIGNATURE_256'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// GitHub 的令牌被 sha256 加密了，所以对 $secret 相同方式加密")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$encyptSecret")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"sha256="')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hash_hmac")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'sha256'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$requestBody")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$secret")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 先对 URL 解码，再解析为 JSON 数组")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$content")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("json_decode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("strstr")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("urldecode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$requestBody")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"{"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token constant boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 若是指定的分支且提交数大于 0，且密码正确")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("strcmp")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$signature")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$encyptSecret")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("empty")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$is_test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// strcmp 函数比较两个字符串")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$content")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'ref'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"refs/heads/'),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$branch")])]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$branch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("empty")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$is_test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$res_log")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"------------------------- [PULL START] -------------------------"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PHP_EOL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// PHP_EOL 是换行符")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$cmd")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"rm -rf '),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$savePath")])]),s._v(" && "),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$git")])]),s._v(" clone -b "),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$branch")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$gitSSHPath")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$savePath")])]),s._v(" && echo '拉取项目并部署成功'\"")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$result")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shell_exec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$cmd")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// shell_exec 关键命令，执行拉取代码")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("empty")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$is_test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$res_log")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"["')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'Y-m-d H:i:s'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'] 执行测试！'")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PHP_EOL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// .= 代表追加到后面，不会覆盖前面")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$res_log")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"["')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'Y-m-d H:i:s'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("time")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'] - 拉取 '")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$content")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'repository'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'name'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("' 仓库的 '")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$content")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'ref'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("' 分支代码进行部署'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PHP_EOL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$result")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$result")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"拉取项目失败"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PHP_EOL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$res_log")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"[项目源] - '),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$source")])]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PHP_EOL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$res_log")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"[执行命令] - "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$cmd")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PHP_EOL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$res_log")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"[结果] - "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$result")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$res_log")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"-------------------------- [PULL END] --------------------------"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PHP_EOL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$res_log")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PHP_EOL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PHP_EOL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file_put_contents")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$logName")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('".log"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$res_log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FILE_APPEND")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 写入日志")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$result")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file_put_contents")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$logName")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('".log"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'[GitHub] 密码错误!'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PHP_EOL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FILE_APPEND")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[s._v("'密码错误！'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果没有 clone，则先克隆代码")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$res")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"[ CLONE START ----------------- ]"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PHP_EOL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果配置全局信息过，则会覆盖")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$res")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shell_exec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$git")])]),s._v(" config --global user.email "),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$email")])]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PHP_EOL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$res")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shell_exec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$git")])]),s._v(" config --global user.name "),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$name")])]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PHP_EOL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$res")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shell_exec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$git")])]),s._v(" clone "),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$gitSSHPath")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token interpolation"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$savePath")])]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PHP_EOL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$res")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('"[ CLONE END ----------------- ]"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PHP_EOL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file_put_contents")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$logName")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token string double-quoted-string"}},[s._v('".log"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$res")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FILE_APPEND")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 写入日志")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token delimiter important"}},[s._v("?>")])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br")])]),t("p",[s._v("GitHub 的脚本和 Gitee 脚本的内容不是一样的，首先 Github 返回的令牌是 sha256 加密的，而 Gitee 返回的是不加密的，所以我们需要对本地的令牌进行 sha256 加密，然后再进行两者的判定，是否相等。")]),s._v(" "),t("p",[s._v("其次 GitHub 返回的请求是经过编码过的，如这种 "),t("code",[s._v("%7B%22ref%22%3A%22refs%2Fheads%2Fgh-pages%")]),s._v("，所以我们获取后需要解码，请看 29 代码。")]),s._v(" "),t("p",[s._v("日志文件如下：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/%E5%85%B3%E4%BA%8E/%E5%85%B3%E4%BA%8E%E6%9C%AC%E7%AB%99/20211209193945.png",alt:"image-20211209193944109"}})]),s._v(" "),t("h3",{attrs:{id:"webhook配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webhook配置"}},[s._v("#")]),s._v(" WebHook配置")]),s._v(" "),t("p",[s._v("讲了那么多，都不懂 WebHook 如何配置，现在开始配置。")]),s._v(" "),t("blockquote",[t("p",[t("strong",[s._v("Github配置")])])]),s._v(" "),t("p",[s._v("进入仓库里，然后 Github 点击 setting，找到 Webhooks，然后点击 Add webhook 进行配置。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/%E5%85%B3%E4%BA%8E/%E5%85%B3%E4%BA%8E%E6%9C%AC%E7%AB%99/20211209180622.png",alt:"image-20211209180621356"}})]),s._v(" "),t("p",[s._v("然后填写 PHP 脚本地址以及令牌。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/%E5%85%B3%E4%BA%8E/%E5%85%B3%E4%BA%8E%E6%9C%AC%E7%AB%99/20211209181011.png",alt:"image-20211209180942101"}})]),s._v(" "),t("p",[s._v("令牌要对应上我提供脚本的 "),t("code",[s._v("$secre")]),s._v(" 变量值。")]),s._v(" "),t("p",[s._v("脚本访问地址：比如脚本放在 "),t("code",[s._v("/home/kbt/")]),s._v(" 下的 deploy 目录下，脚本名叫做 deploy.php，那么地址是 "),t("code",[s._v("ip:port/deploy/deploy.php")]),s._v("。")]),s._v(" "),t("p",[s._v("为什么地址没有 "),t("code",[s._v("/home/kbt")]),s._v("，因为上面我已经配置过了，这个目录是脚本的根路径，所以 "),t("code",[s._v("ip:port/xxx.php")]),s._v(" 就是访问根目录下的 xxx.php，有目录则加上目录即可。")]),s._v(" "),t("blockquote",[t("p",[t("strong",[s._v("Gitee")])])]),s._v(" "),t("p",[s._v("其实就是中文版的 Github，所以位置完全一样")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/%E5%85%B3%E4%BA%8E/%E5%85%B3%E4%BA%8E%E6%9C%AC%E7%AB%99/20211209181628.png",alt:"image-20211209181624596"}})]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/%E5%85%B3%E4%BA%8E/%E5%85%B3%E4%BA%8E%E6%9C%AC%E7%AB%99/20211209181915.png",alt:"image-20211209181909263"}})]),s._v(" "),t("p",[s._v("密码要对应上脚本的密码。")]),s._v(" "),t("p",[s._v("添加 WebHook 后，可以不断发送请求进行测试。")]),s._v(" "),t("div",{staticClass:"custom-block note"},[t("p",{staticClass:"custom-block-title"},[s._v("笔记")]),s._v(" "),t("p",[s._v("只需选择 push 事件触发即可，push 事件是指仓库的 "),t("strong",[s._v("任意分支")]),s._v(" 被 push 了都会触发，并非只有 master 分支触发。")]),s._v(" "),t("div",{staticClass:"custom-block right"},[t("p",[s._v("2021-11-09 @Young Kbt")])])]),s._v(" "),t("h2",{attrs:{id:"问答"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#问答"}},[s._v("#")]),s._v(" 问答")]),s._v(" "),t("p",[t("strong",[s._v("Q1 - 能否总结本内容步骤？")])]),s._v(" "),t("ol",[t("li",[s._v("安装 Docker，然后利用 Docker 安装 Nginx 和 PHP 镜像")]),s._v(" "),t("li",[s._v("创建 kbt 普通用户，加入 docker 组")]),s._v(" "),t("li",[s._v("启动 Nginx 容器，将配置文件目录、静态文件目录、日志文件目录拷贝出来，然后关闭 Nginx 容器")]),s._v(" "),t("li",[s._v("Docker 创建网桥，给两个容器通信")]),s._v(" "),t("li",[s._v("启动 Nginx 容器，将拷贝的出来的三个目录和容器的三个目录进行挂载，以及与 kbt 用户的目录挂载")]),s._v(" "),t("li",[s._v("启动 PHP 容器，与 kbt 用户的目录挂载，PHP 容器的挂载目录和 kbt 用户的目录路径一致")]),s._v(" "),t("li",[s._v("在 Nginx 容器创建 kbt 普通用户和组，然后修改 nginx.conf 配置文件的 user 为 kbt，即 Nginx 的访问权限仅限于 kbt 的权限")]),s._v(" "),t("li",[s._v("修改挂载出来的配置文件目录里的 default.conf 文件，指定 PHP 脚本所在的根路径为 kbt 的用户目录")]),s._v(" "),t("li",[s._v("在 PHP 容器创建 kbt 普通用户和组，然后修改 www.conf 配置文件的 user 和 group 为 kbt，即 PHP 脚本运行权限仅限于 kbt 的权限")]),s._v(" "),t("li",[s._v("两个容器配置完后，按顺序重启 PHP、Nginx 容器")]),s._v(" "),t("li",[s._v("宿主机安装 Git，并配置 SSH 公钥给 Github 或者 Gitee。PHP 安装 Git，在 kbt 用户目录克隆项目")]),s._v(" "),t("li",[s._v("修改挂载出来的配置文件目录里的 default.conf 文件，添加 location，能访问克隆项目的目录")]),s._v(" "),t("li",[s._v("编写 PHP 脚本，然后在 Github 或者 Gitee 上开启 WebHook，配置脚本的 URL 访问地址和令牌、密码")])]),s._v(" "),t("hr"),s._v(" "),t("p",[t("strong",[s._v("Q2 - 为什么 Nginx 的静态文件目录、日志文件目录没有用到？")])]),s._v(" "),t("p",[s._v("我要求启动 Nginx 容器的时候，将这些目录挂载出来，是因为这是实际生产开发需要的，不一定是本内容需要的，这里只是打好预防针，留个印象。")]),s._v(" "),t("p",[s._v("我当初部署的时候确实是把 PHP 脚本和克隆的项目放在静态文件目录下，但是不安全，这些目录是 root 用户管理的，所以我就创建了普通用户 kbt，将 PHP 脚本和克隆的项目放到该普通用户的目录下，即 "),t("code",[s._v("/home/kbt")]),s._v("。而放到该目录后，就要在 Nginx 和 PHP 创建 kbt 用户，并且挂载到 kbt 用户目录下，实现三者的同一个目录互通。如下图：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/%E5%85%B3%E4%BA%8E/%E5%85%B3%E4%BA%8E%E6%9C%AC%E7%AB%99/20211209190215.png",alt:"image-20211209190214547"}})]),s._v(" "),t("p",[t("strong",[s._v("Q3 - 一定要在 Nginx 和 PHP 容器创建普通用户 kbt 吗？")])]),s._v(" "),t("p",[s._v("如果不创建普通用户 kbt，那么就需要一个目录实现上方图的三者互通，那么这个目录就属于 root 用户。")]),s._v(" "),t("hr"),s._v(" "),t("p",[t("strong",[s._v("Q4 - 两个容器创建的 kbt 用户和宿主机的 kbt 用户一样吗？")])]),s._v(" "),t("p",[s._v("不一样，但是我现在部署的时候就是这样创建的，我只把我成功的案例说出来。你也可以试试只在宿主机创建 kbt 用户，两个容器使用默认的用户（不创建 kbt 用户），我认为这样也可以。")]),s._v(" "),t("p",[s._v("是可以的，据我了解，在宿主机以普通用户 kbt 启动 Docker 容器，那么容器里虽然显示 root 用户，但是这个 root 用户的权限其实就是宿主机启动的用户权限，所以需要切换到普通用户，并给普通用户使用 Docker 的权限，然后启动。")]),s._v(" "),t("hr"),s._v(" "),t("p",[t("strong",[s._v("Q5 - 不使用 Docker 如何操作？")])]),s._v(" "),t("p",[s._v("其实熟悉 Docker 了，发现本内容 Docker 操作两个容器，其实就相当于在两台电脑分别安装 Nginx 和 PHP，然后进行操作，Docker 只是实现了两者在同一台电脑的互通（配置同一个网桥）。")]),s._v(" "),t("p",[s._v("不使用 Docker，会发现服务器部署非常方便，步骤大抵如下：")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("在服务器安装 Nginx 和 PHP 的环境")])]),s._v(" "),t("li",[t("p",[s._v("在服务器创建普通用户 kbt，生成 "),t("code",[s._v("/home/kbt")]),s._v(" 路径")])]),s._v(" "),t("li",[t("p",[s._v("修改 Nginx 的配置文件和 PHP 的配置文件，将用户权限改为 kbt")])]),s._v(" "),t("li",[t("p",[s._v("修改 Nginx 的配置文件，实现于 PHP 的互通，以及设置 PHP 脚本的根路径")])]),s._v(" "),t("li",[t("p",[s._v("安装 Git，配置信息，生成 SSH 公钥给 Github 或 Gitee")])]),s._v(" "),t("li",[t("p",[s._v("编写 PHP 脚本，然后在 Github 或 Gitee 开启 WebHook，填写脚本的 URL 访问地址")])])]),s._v(" "),t("p",[s._v("此时会发现少了 Docker 的网桥配置，因为处于同一个服务器，本身就能通信。少了 Docker，也不需要在两个容器创建普通用户 kbt，只需要在宿主机创建即可。")]),s._v(" "),t("hr"),s._v(" "),t("p",[t("strong",[s._v("Q6 - PHP 容器不安装 Git 行吗，只在宿主机安装？")])]),s._v(" "),t("p",[s._v("不行的，因为 PHP 脚本执行后，使用的 "),t("code",[s._v("git")]),s._v(" 命令是脚本所在的环境存在的，不安装即无法克隆项目代码，说其实的，如果曾经已经配置过宿主机的 SSH 公钥，则不需要在宿主机安装 Git。宿主机安装 Git 的目的仅仅是生成 SSH 公钥，而 PHP 容器才是使用 Git 相关的命令。")]),s._v(" "),t("hr"),s._v(" "),t("p",[t("strong",[s._v("Q7 - PHP 容器不挂载出来可以吗？")])]),s._v(" "),t("p",[t("strong",[s._v("可以的，但是不建议")]),s._v("。Docker 挂载的目的就是实现宿主机和容器的数据同步，也就是说两个挂载目录，只要有一方发生修改，则另一方同步修改。而实际上，我们应该禁止容器的挂载目录能被手动修改数据，这样，只修改宿主机的挂载目录数据，安全大大提高的同时，容器的数据也会同步改变。")]),s._v(" "),t("p",[s._v("而如果不挂载出来，就必须进入到容器内部，创建脚本，修改脚本，违背了容器能修改数据的原则，再想想容器万一不小心删除了，则数据全没了。而服务器只有过期、被入侵。两者相比优势清晰明了。")])])}),[],!1,null,null,null);t.default=e.exports}}]);