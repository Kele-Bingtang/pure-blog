(window.webpackJsonp=window.webpackJsonp||[]).push([[161],{484:function(s,a,t){"use strict";t.r(a);var e=t(3),n=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("笔记")]),s._v(" "),a("p",[s._v("集群的搭建能减轻服务器的压力，提高效率。")]),s._v(" "),a("div",{staticClass:"custom-block right"},[a("p",[s._v("2021-12-26 @Young Kbt")])])]),s._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#问题"}},[s._v("问题")])]),a("li",[a("a",{attrs:{href:"#什么是集群"}},[s._v("什么是集群")])]),a("li",[a("a",{attrs:{href:"#环境准备"}},[s._v("环境准备")])]),a("li",[a("a",{attrs:{href:"#插槽slot"}},[s._v("插槽slot")]),a("ul",[a("li",[a("a",{attrs:{href:"#在集群中录入值"}},[s._v("在集群中录入值")])]),a("li",[a("a",{attrs:{href:"#缺点"}},[s._v("缺点")])])])]),a("li",[a("a",{attrs:{href:"#集群指令"}},[s._v("集群指令")])]),a("li",[a("a",{attrs:{href:"#java整合"}},[s._v("Java整合")])]),a("li",[a("a",{attrs:{href:"#集群优缺点"}},[s._v("集群优缺点")])])])]),a("p"),s._v(" "),a("h2",{attrs:{id:"问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题"}},[s._v("#")]),s._v(" 问题")]),s._v(" "),a("p",[s._v("容量不够，Redis 如何进行扩容？并发写操作， Redis 如何分摊？另外，主从模式，薪火相传模式，主机宕机，导致 IP 地址发生变化，应用程序中配置需要修改对应的主机地址、端口等信息。")]),s._v(" "),a("p",[s._v("之前通过代理主机来解决，但是 Redis3.0 中提供了解决方案。就是 "),a("strong",[s._v("无中心化集群")]),s._v(" 配置：即每个节点都可以和其他节点进行联系。如 A、B、C 节点。想访问 B 节点，可以先访问 A 节点，A 节点会去联系 B 节点。无须代理服务器或者负载均衡去找对应的节点。")]),s._v(" "),a("h2",{attrs:{id:"什么是集群"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是集群"}},[s._v("#")]),s._v(" 什么是集群")]),s._v(" "),a("p",[s._v("Redis 集群实现了对 Redis 的水平扩容，即启动 N 个 Redis 节点，将整个数据库分布存储在这 N 个节点中，每个节点存储总数据的 1/N。")]),s._v(" "),a("p",[s._v("Redis 集群通过分区（partition）来提供一定程度的可用性（availability）：即使集群中有一部分节点失效或者无法进行通讯，集群也可以继续处理命令请求。")]),s._v(" "),a("h2",{attrs:{id:"环境准备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#环境准备"}},[s._v("#")]),s._v(" 环境准备")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("将 rdb、aof 文件都删除掉")])]),s._v(" "),a("li",[a("p",[s._v("制作 6 个实例，三主三从，三主机端口分别为 6379，6380，6381。三从机端口分别为6389，6390，6391（具体端口视情况）")])]),s._v(" "),a("li",[a("p",[s._v("每一个配置文件的基本信息修改（和 "),a("strong",[s._v("主从复制 - 哨兵模式")]),s._v(" 一样）")]),s._v(" "),a("ul",[a("li",[s._v("开启 daemonize yes")]),s._v(" "),a("li",[s._v("指定 6 个端口，不能重复")]),s._v(" "),a("li",[s._v("6 个 Pid 文件名字配置，不能重复，尽量以加上端口进行识别")]),s._v(" "),a("li",[s._v("6 个 Log 文件名字，不能重复，尽量以加上端口进行识别")]),s._v(" "),a("li",[s._v("6 个 dump.rdb 名字，不能重复，尽量以加上端口进行识别")]),s._v(" "),a("li",[s._v("Appendonly 关掉或者换名字")])])]),s._v(" "),a("li",[a("p",[s._v("每一个配置文件的集群信息修改")]),s._v(" "),a("ul",[a("li",[s._v("cluster-enabled yes：打开集群模式")]),s._v(" "),a("li",[s._v("cluster-config-file nodes-6379.conf：设定节点配置文件名")]),s._v(" "),a("li",[s._v("cluster-node-timeout 15000：设定节点失联时间，超过该时间（毫秒），集群自动进行主从切换")])])])]),s._v(" "),a("p",[s._v("6379 配置文件模板：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("include /etc/redis.conf    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 核心配置文件")]),s._v("\npidfile /var/run/redis_6379.pid   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 固定")]),s._v("\nport "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#端口")]),s._v("\ndbfilename dump6379.rdb   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 持久化备份文件")]),s._v("\ncluster-enabled "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开启集群模式")]),s._v("\n\ncluster-config-file nodes-6379.conf   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 自己的节点文件名，自动生成，存放节点信息，路径与配置文件一致")]),s._v("\n\ncluster-node-timeout "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("15000")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设定节点失联时间，超过该时间（毫秒），集群自动进行主从切换")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("其他 5 个 Redis 实例也加上端口来识别")]),s._v(" "),a("blockquote",[a("p",[a("strong",[s._v("技巧")])])]),s._v(" "),a("p",[s._v("先配置好一个如 redis6379.conf 配置文件，然后拷贝出 5 个，并内容把 6379 全改为自己的端口名即可：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/Redis/20211226220120.png",alt:"image-20211226220119357"}})]),s._v(" "),a("p",[s._v("使用替换指令：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v(":%s/6379/6380            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 其中 /6380 可以换成其他如 6381  6389 等")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("总结：创建多个 Redis 配置文件，文件名以及端口以及端口有关的名都不一样即可。主从或者集群关系只需几个指令就可以设置。")]),s._v(" "),a("p",[s._v("分别启动 6 台 Redis（如果在的就是当前文件的目录，可以不加目录路径）")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("redis-server 所在目录/redis6379.conf\nredis-server 所在目录/redis6380.conf\nredis-server 所在目录/redis6381.conf\nredis-server 所在目录/redis6389.conf\nredis-server 所在目录/redis6390.conf\nredis-server 所在目录/redis6391.conf\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("确保所有 Redis 实例启动后，nodes-xxxx.conf 文件都生成正常，即配置文件里的 "),a("code",[s._v("cluster-config-file nodes-6379.conf")]),s._v(" 是否生成，位置与该配置文件一个目录。")]),s._v(" "),a("p",[s._v("此时虽然启动了 6 台 Redis，但是他们并没有关联起来，需要指令：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("首先进入 Redis 的安装目录下的 src 目录中，如 "),a("code",[s._v("/opt/redis/redis-6.2.6/src")]),s._v("，因为指令就在这个目录下")])]),s._v(" "),a("li",[a("p",[s._v("执行的指令模板：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("redis-cli "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--cluster")]),s._v(" create --cluster-replicas "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-a")]),s._v(" passsword num ip:port ip:port "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("其中 num 代表每个主节点需要的从节点数，如下面的 1，代表每个主节点都有一个从节点")]),s._v(" "),a("p",[s._v("-a 代表要输入密码")])]),s._v(" "),a("li",[a("p",[s._v("完整指令：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("redis-cli "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--cluster")]),s._v(" create --cluster-replicas "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".199.27:6379 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".199.27:6380 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".199.27:6381 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".199.27:6389 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".199.27:6390 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".199.27:6391\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("此处不要用 127.0.0.1， 请用真实 IP 地址")]),s._v("，如果有密码，加入在 "),a("code",[s._v("--cluster-replicas")]),s._v(" 后加 -a 密码即可。")])])]),s._v(" "),a("p",[s._v("此时不报错，说明集群已经搭建成功，进入任意主机即可。但是进入客户端前需要指定是集群模式和端口号：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("redis-cli "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),s._v("\nredis-cli "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6380")]),s._v("\nredis-cli "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6381")]),s._v("\nredis-cli "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6389")]),s._v("\nredis-cli "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6390")]),s._v("\nredis-cli "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6391")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[a("strong",[s._v("-c 必须加，代表进入的是集群策略。")])]),s._v(" "),a("h2",{attrs:{id:"插槽slot"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插槽slot"}},[s._v("#")]),s._v(" 插槽slot")]),s._v(" "),a("p",[s._v("启动集群后，会看到如下提示：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("All "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("16384")]),s._v(" slots covered\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("16384 代表插槽数量，不是固定的。")]),s._v(" "),a("p",[s._v("每个节点负责一部分插槽。即 16384 个插槽分成三份给三个节点。")]),s._v(" "),a("p",[s._v("集群使用公式 "),a("code",[s._v("CRC16(key) % 16384")]),s._v(" 来计算键 key 属于哪个槽，其中 CRC16(key) 语句用于计算键 key 的 CRC16 校验和。")]),s._v(" "),a("p",[s._v("示例：")]),s._v(" "),a("p",[s._v("节点 A 负责处理 0 号至 5460 号插槽。节点 B 负责处理 5461 号至 10922 号插槽。节点 C 负责处理 10923 号至 16383 号插槽。")]),s._v(" "),a("p",[s._v("执行如下操作：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("set k1 v1\nset k2 v2\nset k3 v3\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("当存储 k1，k2，k3 的值时，对这三个 key 分别计算出 slot 值，然后存入管理不同的 slot 范围的节点里。")]),s._v(" "),a("p",[s._v("假设 k1 的 slot 值为 440，则存入 A 节点里，k2 的 slot 值为 8999，则存入 B 节点里。")]),s._v(" "),a("p",[s._v("当 get 取值时，会根据 key 计算 slot 值去对应的节点拿到值。")]),s._v(" "),a("h3",{attrs:{id:"在集群中录入值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在集群中录入值"}},[s._v("#")]),s._v(" 在集群中录入值")]),s._v(" "),a("p",[s._v("在 redis-cli 每次录入、查询键值，Redis 都会计算出该 key 应该送往的插槽，如果不是该客户端对应服务器的插槽，Redis 会报错，并告知应前往的 Redis 实例地址和端口。")]),s._v(" "),a("p",[s._v("redis-cli 客户端提供了 –c 参数实现自动重定向。")]),s._v(" "),a("p",[s._v("如 "),a("code",[s._v("redis-cli -c –p 6379")]),s._v(" 登入后，再录入、查询键值对可以自动重定向。")]),s._v(" "),a("h3",{attrs:{id:"缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缺点"}},[s._v("#")]),s._v(" 缺点")]),s._v(" "),a("p",[s._v("不在一个 slot 下的键值，是不能使用 mget、mset 等多键操作，因为添加多个 key 时，不同的 key 计算出来的 slot 是不一样的")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/Redis/20211226221447.png",alt:"image-20211226221446834"}})]),s._v(" "),a("p",[s._v("解决：")]),s._v(" "),a("p",[s._v("可以通过 {} 来定义组的概念，从而使 key 中 {} 内相同内容的键值对放到一个 slot 中去")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/Redis/20211226221358.png",alt:"image-20211226221357024"}})]),s._v(" "),a("h2",{attrs:{id:"集群指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集群指令"}},[s._v("#")]),s._v(" 集群指令")]),s._v(" "),a("p",[s._v("查看集群信息")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("cluster nodes\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("查询集群中的值")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("cluster getkeysinslot "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("slot"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("count"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 返回 count 个 slot 槽中的键")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/Redis/20211226222302.png",alt:"image-20211226222301269"}})]),s._v(" "),a("blockquote",[a("p",[a("strong",[s._v("如果主节点下线？从节点能否自动升为主节点？")])])]),s._v(" "),a("p",[s._v("注意：15 秒超时（前面配置文件配置的）。")]),s._v(" "),a("blockquote",[a("p",[a("strong",[s._v("如果所有某一段插槽的主从节点都宕掉，Redis 服务是否还能继续？")])])]),s._v(" "),a("p",[s._v("答：看配置文件的配置。redis.conf 中的参数 "),a("code",[s._v("cluster-require-full-coverage")]),s._v("：")]),s._v(" "),a("ul",[a("li",[s._v("如果某一段插槽的主从都挂掉，而 "),a("code",[s._v("cluster-require-full-coverage")]),s._v(" 为 yes ，那么 ，整个集群都挂掉")]),s._v(" "),a("li",[s._v("如果某一段插槽的主从都挂掉，而 "),a("code",[s._v("cluster-require-full-coverage")]),s._v(" 为 no ，那么，该插槽数据全都不能使用，也无法存储")])]),s._v(" "),a("h2",{attrs:{id:"java整合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java整合"}},[s._v("#")]),s._v(" Java整合")]),s._v(" "),a("p",[s._v("集群配置好后，使用 Java 进行整合。")]),s._v(" "),a("p",[s._v("Java 中，只需连接一个主节点即可，因为 "),a("strong",[s._v("无中心化配置")]),s._v(" 可以让内容在每一个节点间互相传递，即：无论从哪台主机写的数据，其他主机上都能读到数据。")]),s._v(" "),a("p",[s._v("如果但是连接的节点可能宕机，需要连接多个节点，用 set 集合即可。")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JedisClusterTest")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Set")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HostAndPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" set "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HashSet")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        set"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HostAndPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"192.168.31.211"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JedisCluster")]),s._v(" jedisCluster"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("JedisCluster")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("set"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        jedisCluster"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"k1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"v1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("jedisCluster"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"k1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h2",{attrs:{id:"集群优缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集群优缺点"}},[s._v("#")]),s._v(" 集群优缺点")]),s._v(" "),a("p",[s._v("优点：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("实现扩容")])]),s._v(" "),a("li",[a("p",[s._v("分摊压力")])]),s._v(" "),a("li",[a("p",[s._v("无中心配置相对简单")])])]),s._v(" "),a("p",[s._v("缺点：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("多键操作是不被支持的")])]),s._v(" "),a("li",[a("p",[s._v("多键的 Redis 事务是不被支持的。lua 脚本不被支持")])]),s._v(" "),a("li",[a("p",[s._v("由于集群方案出现较晚，很多公司已经采用了其他的集群方案，而代理或者客户端分片的方案想要迁移至 Redis Cluster，需要整体迁移而不是逐步过渡，复杂度较大")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);