(window.webpackJsonp=window.webpackJsonp||[]).push([[133],{460:function(s,a,t){"use strict";t.r(a);var n=t(3),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("笔记")]),s._v(" "),a("p",[s._v("2019 年 9 月 17 日，国际知名的 OpenJDK 开源社区发布了 Java 编程语言环境的最新版本 OpenJDK13。")]),s._v(" "),a("div",{staticClass:"custom-block right"},[a("p",[s._v("2022-02-08 @Young Kbt")])])]),s._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#java13概述"}},[s._v("Java13概述")])]),a("li",[a("a",{attrs:{href:"#switch表达式-预览"}},[s._v("Switch表达式（预览）")])]),a("li",[a("a",{attrs:{href:"#文本块-预览"}},[s._v("文本块（预览）")]),a("ul",[a("li",[a("a",{attrs:{href:"#现实问题"}},[s._v("现实问题")])]),a("li",[a("a",{attrs:{href:"#目标"}},[s._v("目标")])]),a("li",[a("a",{attrs:{href:"#举例"}},[s._v("举例")])]),a("li",[a("a",{attrs:{href:"#具体使用"}},[s._v("具体使用")])])])]),a("li",[a("a",{attrs:{href:"#动态cds档案-动态类数据共享归档"}},[s._v("动态CDS档案（动态类数据共享归档）")])]),a("li",[a("a",{attrs:{href:"#zgc-取消使用未使用的内存"}},[s._v("ZGC：取消使用未使用的内存")]),a("ul",[a("li",[a("a",{attrs:{href:"#g1和shenandoah"}},[s._v("G1和Shenandoah")])]),a("li",[a("a",{attrs:{href:"#zgc的使用背景"}},[s._v("ZGC的使用背景")])]),a("li",[a("a",{attrs:{href:"#使用细节"}},[s._v("使用细节")])])])]),a("li",[a("a",{attrs:{href:"#重新实现旧版套接字api"}},[s._v("重新实现旧版套接字API")]),a("ul",[a("li",[a("a",{attrs:{href:"#现有问题"}},[s._v("现有问题")])]),a("li",[a("a",{attrs:{href:"#新的实现类"}},[s._v("新的实现类")])]),a("li",[a("a",{attrs:{href:"#代码说明"}},[s._v("代码说明")])])])]),a("li",[a("a",{attrs:{href:"#其他解读"}},[s._v("其他解读")]),a("ul",[a("li",[a("a",{attrs:{href:"#增加项"}},[s._v("增加项")])]),a("li",[a("a",{attrs:{href:"#移除项"}},[s._v("移除项")])]),a("li",[a("a",{attrs:{href:"#废弃项"}},[s._v("废弃项")])]),a("li",[a("a",{attrs:{href:"#已知问题"}},[s._v("已知问题")])]),a("li",[a("a",{attrs:{href:"#其他事项"}},[s._v("其他事项")])]),a("li",[a("a",{attrs:{href:"#小结"}},[s._v("小结")])])])]),a("li",[a("a",{attrs:{href:"#采用新版本的注意事项"}},[s._v("采用新版本的注意事项")]),a("ul",[a("li",[a("a",{attrs:{href:"#注意1-被新版本系列绑架"}},[s._v("注意1：被新版本系列绑架")])]),a("li",[a("a",{attrs:{href:"#注意2-升级的绊脚石"}},[s._v("注意2：升级的绊脚石")])]),a("li",[a("a",{attrs:{href:"#注意3-云-托管-部署"}},[s._v("注意3：云/托管/部署")])]),a("li",[a("a",{attrs:{href:"#注意4-为采用新版本进行规划"}},[s._v("注意4：为采用新版本进行规划")])]),a("li",[a("a",{attrs:{href:"#注意5-其他第三方厂商的声明"}},[s._v("注意5：其他第三方厂商的声明")])])])]),a("li",[a("a",{attrs:{href:"#最后"}},[s._v("最后")]),a("ul",[a("li",[a("a",{attrs:{href:"#再谈jdk版本更新"}},[s._v("再谈JDK版本更新")])]),a("li",[a("a",{attrs:{href:"#oracle撒手-openjdk继续向前"}},[s._v("Oracle撒手，OpenJDK继续向前")])]),a("li",[a("a",{attrs:{href:"#未来展望"}},[s._v("未来展望")])])])])])]),a("p"),s._v(" "),a("h2",{attrs:{id:"java13概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java13概述"}},[s._v("#")]),s._v(" Java13概述")]),s._v(" "),a("p",[s._v("2019 年 9 月 17 日，国际知名的 OpenJDK 开源社区发布了 Java 编程语言环境的最新版本 OpenJDK13。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/Java/20220212161737.png",alt:"image-20220212161729221"}})]),s._v(" "),a("p",[s._v("根据 Oracle 的统计信息，如上图所示，在所有为社区 JDK 13 有代码贡献的公司中，排名前五的为：Oracle、Red Hat、SAP、Google 和龙芯。龙芯位列全球第 5，全国第 1，为社区贡献了几十个 Patch。")]),s._v(" "),a("p",[s._v("Features：总共有 5 个新的 JEP（JDK Enhancement Proposals）："),a("code",[s._v("http://openjdk.java.net/projects/jdk/13/")]),s._v("。")]),s._v(" "),a("p",[s._v("各个 build 的更新说明可以查看："),a("code",[s._v("https://jdk.java.net/13/release-notes")]),s._v("。")]),s._v(" "),a("blockquote",[a("p",[s._v("Features")])]),s._v(" "),a("ul",[a("li",[s._v("350:Dynamic CDS Archives 动态 CDS 档案")]),s._v(" "),a("li",[s._v("351:ZGC: Uncommit Unused Memory ZGC 取消使用未使用的内存")]),s._v(" "),a("li",[s._v("353:Reimplement the Legacy Socket API 重新实现旧版套接字 API")]),s._v(" "),a("li",[s._v("354:Switch Expressions (Preview) Switch 表达式（预览）")]),s._v(" "),a("li",[s._v("355:Text Blocks (Preview) 文字块（预览）")])]),s._v(" "),a("h2",{attrs:{id:"switch表达式-预览"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#switch表达式-预览"}},[s._v("#")]),s._v(" Switch表达式（预览）")]),s._v(" "),a("p",[s._v("在 JDK 12 中引入了 Switch 表达式作为预览特性。JDK 13 提出了第二个 Switch 表达式预览。JEP 354 修改了这个特性，"),a("strong",[s._v("它引入了 yield 语句，用于返回值")]),s._v("。这意味着，Switch 表达式（返回值）应该使用 yield，Switch 语句（不返回值）应该使用 break。")]),s._v(" "),a("p",[s._v("在 JDK 12 中有一个，但是要进行一个更改：要从 Switch 表达式中生成一个值 break，要删除 "),a("code",[s._v("with value")]),s._v(" 语句以支持 "),a("code",[s._v("a yield")]),s._v(" 声明。目的是扩展，Switch 以便它可以用作语句或表达式，因此两个表单既可以使用 "),a("code",[s._v("case ...")]),s._v(" : 带有连贯符号的传统标签，也可以使用新 "),a("code",[s._v("case … ->")]),s._v(" 标签，而不需要通过，还有一个新的语句用于从 Switch 表达式中产生值。这些更改将简化编码并为模式匹配做好准备。")]),s._v(" "),a("p",[s._v("在以前，我们想要在 Switch 中返回内容，还是比较麻烦的，一般语法如下：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Test")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("testSwitch1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n            i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n            i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n            i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("length")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("p",[s._v("在 JDK13 中使用以下语法：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Test")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("testSwitch2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("yield")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("或者")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Test")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("testSwitch3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("yield")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("yield")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("yield")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("在这之后，Switch 中就多了一个关键字用于跳出 Switch 块了，那就是 yield，他用于返回一个值。和 return 的区别在于：return 会直接跳出当前循环或者方法，而 yield 只会跳出当前 Switch 块。")]),s._v(" "),a("h2",{attrs:{id:"文本块-预览"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文本块-预览"}},[s._v("#")]),s._v(" 文本块（预览）")]),s._v(" "),a("p",[s._v("在 JDK 12 中引入了 Raw String Literals 特性，但在发布之前就放弃了。这个 JEP 与引入多行字符串文字（text block）在意义上是类似的。")]),s._v(" "),a("p",[a("strong",[s._v("这条新特性跟 Kotlin 里的文本块是类似的。")])]),s._v(" "),a("h3",{attrs:{id:"现实问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#现实问题"}},[s._v("#")]),s._v(" 现实问题")]),s._v(" "),a("p",[s._v("在 Java 中，通常需要使用 String 类型表达 HTML，XML，SQL 或 JSON 等格式的字符串，在进行字符串赋值时需要进行转义和连接操作，然后才能编译该代码，这种表达方式难以阅读并且难以维护。")]),s._v(" "),a("p",[s._v("文本块就是指多行字符串，例如一段格式化后的 xml、json 等。而有了文本块以后，用户不需要转义，Java 能自动搞定。因此，"),a("strong",[s._v("文本块将提高 Java 程序的可读性和可写性")]),s._v("。")]),s._v(" "),a("h3",{attrs:{id:"目标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标"}},[s._v("#")]),s._v(" 目标")]),s._v(" "),a("ul",[a("li",[s._v("简化跨越多行的字符串，避免对换行等特殊字符进行转义，简化编写 Java 程序")]),s._v(" "),a("li",[s._v("增强 Java 程序中字符串的可读性")])]),s._v(" "),a("h3",{attrs:{id:"举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#举例"}},[s._v("#")]),s._v(" 举例")]),s._v(" "),a("p",[s._v("会被自动转义，如有一段以下字符串：")]),s._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("Hello, Java13"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("将其复制到 Java 的字符串中，会展示成以下内容：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<html>\\n"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" <body>\\n"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("\n    \t"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" <p>Hello, Java13</p>\\n"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" </body>\\n"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"</html>\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("上面内容被自动进行了转义，这样的字符串看起来不是很直观，在 JDK 13 中，就可以使用以下语法了：")]),s._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[s._v('"""\n'),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    \t"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("Hello, Java13"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v('\n""";\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("使用 "),a("code",[s._v('"""')]),s._v(" 作为文本块的开始符和结束符，在其中就可以放置多行的字符串，不需要进行任何转义。看起来就十分清爽了。")]),s._v(" "),a("p",[s._v("如常见的 SQL 语句：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" employee_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("last_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("department_id\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" department_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("40")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" department_id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("asc")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("原有方式：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" query "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"select employee_id,last_name,salary,department_id\\n"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"from employees\\n"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"where department_id in (40,50,60)\\n"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"order by department_id asc"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("使用新特性：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" newQuery "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n    select employee_id,last_name,salary,department_id\n    from employees\n    where department_id in (40,50,60)\n    order by department_id asc\n"""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h3",{attrs:{id:"具体使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#具体使用"}},[s._v("#")]),s._v(" 具体使用")]),s._v(" "),a("p",[s._v("内容看不懂，可以看视频讲解：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("https://www.bilibili.com/video/BV1jJ411M7kQ?p=27")])]),s._v(" "),a("li",[a("code",[s._v("https://www.bilibili.com/video/BV1jJ411M7kQ?p=28")])])]),s._v(" "),a("blockquote",[a("p",[s._v("基本使用")])]),s._v(" "),a("ul",[a("li",[s._v("文本块是 Java 语言中的一种新文字。它可以用来表示任何字符串，并且提供更大的表现力和更少的复杂性")]),s._v(" "),a("li",[s._v("文本块由零个或多个字符组成，由开始和结束分隔符括起来\n"),a("ul",[a("li",[s._v('开始分隔符是由三个双引号字符（"""），后面可以跟零个或多个空格，最终以行终止符结束。文本块内容以 '),a("strong",[s._v("开始分隔符的行终止符后的第一个字符开始")])]),s._v(" "),a("li",[s._v('结束分隔符也是由三个双引号字符（"""）表示，文本块内容以 '),a("strong",[s._v("结束分隔符的第一个双引号之前的最后一个字符结束")])])])]),s._v(" "),a("li",[s._v('文本块中的内容可以直接使用 ","，但不是必需的')]),s._v(" "),a("li",[s._v("文本块中的内容可以直接包括行终止符。允许在文本块中使用 "),a("code",[s._v("\\n")]),s._v("，但不是必需的。")])]),s._v(" "),a("p",[s._v("例如，文本块：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\nline1\nline2\nline3\n"""')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("相当于：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"line1\\nline2\\nline3\\n"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("或者一个连接的字符串：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"line1\\n"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"line2\\n"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"line3\\n"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("如果字符串末尾不需要行终止符，则结束分隔符可以放在最后一行内容上。例如：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\nline1\nline2\nline3"""')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("相当于（line3 少了 \\n）")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"line1\\nline2\\nline3"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("文本块可以表示空字符串，但不建议这样做，因为它需要两行源代码：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" empty "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n"""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("以下示例是错误格式的文本块：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v('"'),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v('"'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 开始分隔符后没有行终止符")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v('" '),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v('"'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 开始分隔符后没有行终止符")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n\t\t\t"; // 没有结束分隔符\nString d = """')]),s._v("\n            abc \\ def\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v('"'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 含有未转义的反斜线（请参阅下面的转义处理）")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("在运行时，"),a("strong",[s._v("文本块将被实例化为 String 的实例，就像字符串一样")]),s._v("。从文本块派生的 String 实例与从字符串派生的实例是无法区分的。"),a("strong",[s._v("具有相同内容的两个文本块将引用相同的 String 实例，就像字符串一样")]),s._v("。")]),s._v(" "),a("blockquote",[a("p",[s._v("编译器在编译时会删除掉这些多余的空格")])]),s._v(" "),a("p",[s._v("下面这段代码中，我们用 "),a("code",[s._v(".")]),s._v(" 来表示我们代码中的的空格，而这些位置的空格就是多余的。")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" html "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n..............<html>\n.............. <body>\n.............. <p>Hello, world</p>\n.............. </body>\n..............</html>\n.............."""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("多余的空格还会出现在每一行的结尾，特别是当你从其他地方复制过来时，更容易出现这种情况，比如下面的代码：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" html "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n..............<html>...\n.............. <body>\n.............. <p>Hello, world</p>....\n.............. </body>.\n..............</html>...\n.............."""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("这些多余的空格对于程序员来说是看不到的，但是他又是实际存在的，所以 "),a("strong",[s._v("如果编译器不做处理，可能会导致程序员看到的两个文本块内容是一样的，但是这两个文本块却因为存在这种多余的空格而导致差异，比如哈希值不相等")]),s._v("。")]),s._v(" "),a("p",[s._v("所以编译器在编译时会删除掉这些多余的空格，但是有个细节：")]),s._v(" "),a("ul",[a("li",[s._v("如果是字符串后面的空格，则无条件删除")]),s._v(" "),a("li",[s._v("如果是字符串前面的空格，那就看结束分隔符的空格数\n"),a("ul",[a("li",[s._v("如果结束分隔符没有空格，则不会删除字符串前面的空格")]),s._v(" "),a("li",[s._v("如果结束分隔符有 n 个空格，则删除字符串前面的 n 个空格")])])])]),s._v(" "),a("p",[s._v("例如：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 如果结束分隔符 """ 没有空格，则不会删除字符串前面的空格')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n hello \n"""')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("length")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 6")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// 如果结束分隔符 """ 有 n 个空格，则删除字符串前面的 n 个空格')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" str1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n hello  \n """')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("length")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 5")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("blockquote",[a("p",[s._v("转义字符")])]),s._v(" "),a("p",[s._v("允许开发人员使用 "),a("code",[s._v("\\n")]),s._v("，"),a("code",[s._v("\\f")]),s._v(" 和 "),a("code",[s._v("\\r")]),s._v(" 来进行字符串的垂直格式化，使用 "),a("code",[s._v("\\b")]),s._v(" 和 "),a("code",[s._v("\\t")]),s._v(" 进行水平格式化。比如下面的代码是合法的（输出的效果会额外被转义字符改变）：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" html "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n    <html>\\n\n        <body>\\n\n        \t<p>Hello, world</p>\\n\n        </body>\\n\n    </html>\\n\n"""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("请注意，在文本块内自由使用 "),a("code",[s._v('"')]),s._v(" 是合法的。例如（输出带有 "),a("code",[s._v('""')]),s._v(" 的内容）：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" story "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n    "When I use a word," Humpty Dumpty said,\n    in rather a scornful tone, "it means just what I\n    choose it to mean - neither more nor less."\n    "The question is," said Alice, "whether you\n    can make words mean so many different things."\n    "The question is," said Humpty Dumpty,\n    "which is to be master - that\'s all."\n"""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("但是，三个 "),a("code",[s._v('"')]),s._v(" 字符的序列需要进行转义至少一个 "),a("code",[s._v('"')]),s._v("，以避免模仿结束分隔符：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" code "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n    String text = \\"""\n    \tA text block inside a text block\n    \\""";\n    """')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("blockquote",[a("p",[s._v("文本块连接")])]),s._v(" "),a("p",[s._v("可以在任何可以使用字符串的地方使用文本块。例如，文本块和字符串可以相互连接：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" code "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"public void print(Object o) {"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n                System.out.println(Objects.toString(o));\n                }\n            """')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("但是，涉及文本块的连接可能变得相当笨重。以下面文本块为基础：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" code "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n    public void print(Object o) {\n    \tSystem.out.println(Objects.toString(o));\n    }\n"""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("假设我们想把上面的 Object 改为来自某一变量 type，我们可能会这么写：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" code "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n    public void print("""')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" type "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n    o) {\n    \tSystem.out.println(Objects.toString(o));\n    }\n"""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("可以发现这种写法可读性是非常差的，更简洁的替代方法是使用 "),a("code",[s._v("String :: replace")]),s._v(" 或 "),a("code",[s._v("String :: format")]),s._v("，比如：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" code "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n    public void print($type o) {\n    \tSystem.out.println(Objects.toString(o));\n    }\n"""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$type"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("或")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" code "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n    public void print(%s o) {\n    \tSystem.out.println(Objects.toString(o));\n    }\n"""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("另一个方法是使用 "),a("code",[s._v("String :: formatted")]),s._v("，这是一个新方法，比如：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" source "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n    public void print(%s object) {\n    \tSystem.out.println(Objects.toString(object));\n    }\n"""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("formatted")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h2",{attrs:{id:"动态cds档案-动态类数据共享归档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态cds档案-动态类数据共享归档"}},[s._v("#")]),s._v(" 动态CDS档案（动态类数据共享归档）")]),s._v(" "),a("p",[s._v("CDS，是 Java 12 的特性了，可以让不同 Java 进程之间共享一份类元数据，减少内存占用，它还能加快应用的启动速度。而 JDK13 的这个特性支持在 Java Application 执行之后进行动态 archive。存档类将包括默认的基础层 CDS 存档中不存在的所有已加载的应用程序和库类。也就是说，在 Java 13 中再使用 AppCDS 的时候，就不再需要这么复杂了。")]),s._v(" "),a("p",[s._v("该提案处于目标阶段，旨在提高 AppCDS 的可用性，并消除用户进行试运行以创建每个应用程序的类列表的需要。")]),s._v(" "),a("p",[s._v("使用示例：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# JVM 退出时动态创建共享归档文件：导出 jsa")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("java")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-XX:ArchiveClassesAtExit")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("hello.jsa "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-cp")]),s._v(" hello.jar Hello\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 用动态创建的共享归档文件运行应用:使用 jsa")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("java")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-XX:SharedArchiveFile")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("hello.jsa "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-cp")]),s._v(" hello.jar Hello\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h2",{attrs:{id:"zgc-取消使用未使用的内存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zgc-取消使用未使用的内存"}},[s._v("#")]),s._v(" ZGC：取消使用未使用的内存")]),s._v(" "),a("h3",{attrs:{id:"g1和shenandoah"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#g1和shenandoah"}},[s._v("#")]),s._v(" G1和Shenandoah")]),s._v(" "),a("p",[s._v("JVM 的 GC 释放的内存会还给操作系统吗？")]),s._v(" "),a("p",[s._v("GC 后的内存如何处置，其实是取决于不同的垃圾回收器。因为把内存还给 OS，意味着要调整 JVM 的堆大小，这个过程是比较耗费资源的。")]),s._v(" "),a("ul",[a("li",[s._v("Java12 的 "),a("a",{attrs:{href:"http://openjdk.java.net/jeps/346",target:"_blank",rel:"noopener noreferrer"}},[s._v("346: Promptly Return Unused Committed Memory from G1"),a("OutboundLink")],1),s._v(" 新增了两个参数分别是 "),a("code",[s._v("G1PeriodicGCInterval")]),s._v(" 及 "),a("code",[s._v("G1PeriodicGCSystemLoadThreshold")]),s._v(" 用于 GC 之后重新调整 Java heap size，然后将多余的内存归还给操作系统")]),s._v(" "),a("li",[s._v("Java12 的 "),a("a",{attrs:{href:"http://openjdk.java.net/jeps/189",target:"_blank",rel:"noopener noreferrer"}},[s._v("189: Shenandoah: A Low-Pause-Time Garbage Collector (Experimental)"),a("OutboundLink")],1),s._v(" 拥有参数 "),a("code",[s._v("-XX:ShenandoahUncommitDelay = milliseconds")]),s._v(" 来指定 ZPage 的 page cache 的失效时间，然后归还内存")])]),s._v(" "),a("p",[s._v("HotSpot 的 G1 和 Shenandoah 这两个 GC 已经提供了这种能力，并且对某些用户来说，非常有用。因此，Java13 则给 ZGC 新增归还 unused heap memory 给操作系统的特性。")]),s._v(" "),a("h3",{attrs:{id:"zgc的使用背景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zgc的使用背景"}},[s._v("#")]),s._v(" ZGC的使用背景")]),s._v(" "),a("p",[s._v("在 JDK 11 中，Java 引入了 ZGC，这是一款可伸缩的低延迟垃圾收集器，但是当时只是实验性的。号称不管你开了多大的堆内存，它都能保证在 10 毫秒内释放 JVM ，不让它停顿在那。但是，当时的设计是它不能把内存归还给操作系统。对于比较关心内存占用的应用来说，肯定希望进程不要占用过多的内存空间了，所以这次增加了这个特性。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/Java/20220212163956.png",alt:"image-20220212163956022"}})]),s._v(" "),a("p",[s._v("在 Java 13 中，JEP 351 再次对 ZGC 做了增强，将没有使用的堆内存归还给操作系统。ZGC 当前不能把内存归还给操作系统，即使是那些很久都没有使用的内存，也只进不出。这种行为并不是对任何应用和环境都是友好的，尤其是那些内存占用敏感的服务，例如：")]),s._v(" "),a("ul",[a("li",[s._v("按需付费使用的容器环境")]),s._v(" "),a("li",[s._v("应用程序可能长时间闲置，并且和很多其他应用共享和竞争资源的环境")]),s._v(" "),a("li",[s._v("应用程序在执行期间有非常不同的堆空间需求，例如，可能在启动的时候所需的堆比稳定运行的时候需要更多的堆内存")])]),s._v(" "),a("h3",{attrs:{id:"使用细节"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用细节"}},[s._v("#")]),s._v(" 使用细节")]),s._v(" "),a("p",[s._v("ZGC 的堆由若干个 Region 组成，每个 Region 被称之为 ZPage。每个 Zpage 与数量可变的已提交内存相关联。当 ZGC 压缩堆的时候，ZPage 就会释放，然后进入 Page Cache，即 ZPageCache。这些在 Page Cache 中的 ZPage 集合就表示没有使用部分的堆，这部分内存应该被归还给操作系统。回收内存可以简单的通过从 Page Cache 中逐出若干个选好的 ZPage 来实现，由于 Page Cache 是以 LRU（Least recently used，最近最少使用）顺序保存 ZPage 的，并且按照尺寸（小，中，大）进行隔离，因此逐出 ZPage 机制和回收内存相对简单了很多，主要挑战是设计关于何时从 Page Cache 中逐出 ZPage 的策略。")]),s._v(" "),a("p",[s._v("一个简单的策略就是设定一个超时或者延迟值，表示 ZPage 被驱逐前，能在 Page Cache 中驻留多长时间。这个超时时间会有一个合理的默认值，也可以通过 JVM 参数覆盖它。Shenandoah GC 用了一个类型的策略，默认超时时间是 5 分钟，可以通过参数 "),a("code",[s._v("-XX:ShenandoahUncommitDelay = milliseconds")]),s._v(" 覆盖默认值。")]),s._v(" "),a("p",[s._v("像上面这样的策略可能会运作得相当好。但是，用户还可以设想更复杂的策略：不需要添加任何新的命令行选项。例如，基于 GC 频率或某些其他数据找到合适超时值的启发式算法。JDK13 将使用哪种具体策略目前尚未确定。可能最初只提供一个简单的超时策略，使用 "),a("code",[s._v("-XX:ZUncommitDelay = seconds")]),s._v(" 选项，以后的版本会添加更复杂、更智能的策略（如果可以的话）。")]),s._v(" "),a("p",[s._v("uncommit 能力默认是开启的，但是无论指定何种策略，ZGC 都不能把堆内存降到低于 Xms。这就意味着，如果 Xmx 和 Xms 相等的话，这个能力就失效了。"),a("code",[s._v("-XX:-ZUncommit")]),s._v(" 这个参数也能让这个内存管理能力失效。")]),s._v(" "),a("h2",{attrs:{id:"重新实现旧版套接字api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重新实现旧版套接字api"}},[s._v("#")]),s._v(" 重新实现旧版套接字API")]),s._v(" "),a("h3",{attrs:{id:"现有问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#现有问题"}},[s._v("#")]),s._v(" 现有问题")]),s._v(" "),a("p",[s._v("重新实现了古老的 Socket 接口。现在已有的 "),a("code",[s._v("java.net.Socket")]),s._v(" 和 "),a("code",[s._v("java.net.ServerSocket")]),s._v(" 以及它们的实现类，都可以回溯到 JDK 1.0 时代了。")]),s._v(" "),a("ul",[a("li",[s._v("它们的实现是混合了 Java 和 C 的代码的，维护和调试都很痛苦")]),s._v(" "),a("li",[s._v("实现类还使用了线程栈作为 I/O 的缓冲，导致在某些情况下还需要增加线程栈的大小")]),s._v(" "),a("li",[s._v("支持异步关闭，此操作是通过使用一个本地的数据结构来实现的，这种方式这些年也带来了潜在的不稳定性和跨平台移植问题。该实现还存在几个并发问题，需要彻底解决")])]),s._v(" "),a("p",[s._v("在未来的网络世界，要快速响应，不能阻塞本地方法线程，当前的实现不适合使用了。")]),s._v(" "),a("h3",{attrs:{id:"新的实现类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#新的实现类"}},[s._v("#")]),s._v(" 新的实现类")]),s._v(" "),a("p",[s._v("全新实现的 NioSocketImpl 来替换 JDK1.0 的 PlainSocketImpl。")]),s._v(" "),a("ul",[a("li",[s._v("它便于维护和调试，与 NewI/O（NIO）使用相同的 JDK 内部结构，因此不需要使用系统本地代码")]),s._v(" "),a("li",[s._v("它与现有的缓冲区缓存机制集成在一起，这样就不需要为 I/O 使用线程栈")]),s._v(" "),a("li",[s._v("它使用 "),a("code",[s._v("java.util.concurrent")]),s._v(" 锁，而不是 "),a("code",[s._v("synchronized")]),s._v(" 同步方法，增强了并发能力")]),s._v(" "),a("li",[s._v("新的实现是 Java 13 中的默认实现，但是旧的实现还没有删除，可以通过设置系统属性 "),a("code",[s._v("jdk.net.usePlainSocketImpl")]),s._v(" 来切换到旧版本")])]),s._v(" "),a("h3",{attrs:{id:"代码说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码说明"}},[s._v("#")]),s._v(" 代码说明")]),s._v(" "),a("p",[s._v("运行一个实例化 Socket 和 ServerSocket 的类将显示这个调试输出。这是默认的（新的）。")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Module")]),s._v(" java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("base\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Package")]),s._v(" java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("net\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SocketImpl")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("abstract")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SocketImpl")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SocketOptions")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("USE_PLAINSOCKETIMPL")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("usePlainSocketImpl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("usePlainSocketImpl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PrivilegedAction")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" pa "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("NetProperties")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"jdk.net.usePlainSocketImpl"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" s "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AccessController")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("doPrivileged")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("pa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("equalsIgnoreCase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"false"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n* Creates an instance of platform's SocketImpl\n*/")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@SuppressWarnings")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"unchecked"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("S")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SocketImpl")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PlatformSocketImpl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("S")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("createPlatformSocketImpl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("USE_PLAINSOCKETIMPL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("S")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PlainSocketImpl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("S")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("NioSocketImpl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br")])]),a("p",[a("code",[s._v("SocketImpl")]),s._v(" 的 USE_PLAINSOCKETIMPL 取决于 "),a("code",[s._v("usePlainSocketImpl")]),s._v(" 方法，而它会从 NetProperties 读取 "),a("code",[s._v("dk.net.usePlainSocketImpl")]),s._v(" 配置，如果不为 null 且不为 false，则 "),a("code",[s._v("usePlainSocketImpl")]),s._v(" 方法返回 true；"),a("code",[s._v("createPlatformSocketImpl")]),s._v(" 会根据 "),a("code",[s._v("USE_PLAINSOCKETIMPL")]),s._v(" 来创建 "),a("code",[s._v("PlainSocketImpl")]),s._v(" 或者 "),a("code",[s._v("NioSocketImpl")]),s._v("。")]),s._v(" "),a("h2",{attrs:{id:"其他解读"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他解读"}},[s._v("#")]),s._v(" 其他解读")]),s._v(" "),a("p",[s._v("上面列出的是大方面的特性，除此之外还有一些 API 的更新及废弃，主要见 JDK 13 Release Notes："),a("code",[s._v("https://jdk.java.net/13/release-notes")])]),s._v(" "),a("p",[s._v("这里举几个例子。")]),s._v(" "),a("h3",{attrs:{id:"增加项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#增加项"}},[s._v("#")]),s._v(" 增加项")]),s._v(" "),a("ul",[a("li",[s._v("添加 "),a("code",[s._v("FileSystems.newFileSystem(Path, Map) Method")])]),s._v(" "),a("li",[s._v("新的 "),a("code",[s._v("java.nio.ByteBuffer")]),s._v("：Bulk get/put Methods Transfer Bytes Without Regard to Buffer Position")]),s._v(" "),a("li",[s._v("支持 Unicode 12.1")]),s._v(" "),a("li",[s._v("添加 "),a("code",[s._v("-XX:SoftMaxHeapSize Flag")]),s._v("，目前仅仅对 ZGC 起作用")]),s._v(" "),a("li",[s._v("ZGC 的最大 heap 大小增大到 16TB")])]),s._v(" "),a("h3",{attrs:{id:"移除项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#移除项"}},[s._v("#")]),s._v(" 移除项")]),s._v(" "),a("ul",[a("li",[s._v("移除 "),a("code",[s._v("awt.toolkit System Property")])]),s._v(" "),a("li",[s._v("移除 "),a("code",[s._v("Runtime Trace Methods")])]),s._v(" "),a("li",[s._v("移除 "),a("code",[s._v("-XX:+AggressiveOpts")])]),s._v(" "),a("li",[s._v("移除 Two Comodo Root CA Certificates、Two DocuSign Root CA Certificates")]),s._v(" "),a("li",[s._v("移除内部的 "),a("code",[s._v("com.sun.net.ssl")]),s._v(" 包")])]),s._v(" "),a("h3",{attrs:{id:"废弃项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#废弃项"}},[s._v("#")]),s._v(" 废弃项")]),s._v(" "),a("ul",[a("li",[s._v("废弃 "),a("code",[s._v("-Xverify:none")]),s._v(" 及 "),a("code",[s._v("-noverify")])]),s._v(" "),a("li",[s._v("废弃 "),a("code",[s._v("rmic Tool")]),s._v("，并准备移除")]),s._v(" "),a("li",[s._v("废弃 "),a("code",[s._v("javax.security.cert")]),s._v("，并准备移除")])]),s._v(" "),a("h3",{attrs:{id:"已知问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#已知问题"}},[s._v("#")]),s._v(" 已知问题")]),s._v(" "),a("ul",[a("li",[s._v("不再支持 Windows 2019 Core Server")]),s._v(" "),a("li",[s._v("使用 ZIP File System (zipfs) Provider 来更新包含 Uncompressed Entries 的 ZIP 或 JAR 可能造成文件损坏")])]),s._v(" "),a("h3",{attrs:{id:"其他事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他事项"}},[s._v("#")]),s._v(" 其他事项")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("GraphicsEnvironment.getCenterPoint()")]),s._v(" 及 "),a("code",[s._v("getMaximumWindowBounds()")]),s._v(" 已跨平台统一")]),s._v(" "),a("li",[s._v("增强了 JAR Manifest 的 Class-Path 属性处理")]),s._v(" "),a("li",[s._v("针对 "),a("code",[s._v("Negatively Sized Argument")]),s._v("，"),a("code",[s._v("StringBuffer(CharSequence)")]),s._v(" 及 "),a("code",[s._v("StringBuilder(CharSequence)")]),s._v(" 会抛出 "),a("code",[s._v("NegativeArraySizeException")])]),s._v(" "),a("li",[s._v("Linux 的默认进程启动机制已经使用 posix_spawn")]),s._v(" "),a("li",[a("code",[s._v("Lookup.unreflectSetter(Field)")]),s._v(" 针对 "),a("code",[s._v("static final fields")]),s._v(" 会抛出 "),a("code",[s._v("IllegalAccessException")])]),s._v(" "),a("li",[s._v("使用了 "),a("code",[s._v("java.net.Socket.setSocketImplFactory")]),s._v(" 及 "),a("code",[s._v("java.net.ServerSocket.setSocketFactory")]),s._v(" 方法的要注意，要求客户端及服务端要一致，不能一端使用自定义的 factory 一端使用默认的 factory")]),s._v(" "),a("li",[s._v("SocketImpl 的 "),a("code",[s._v("supportedOptions")]),s._v("、"),a("code",[s._v("getOption")]),s._v(" 及 "),a("code",[s._v("setOption")]),s._v(" 方法的默认实现发生了变化，默认的 "),a("code",[s._v("supportedOptions")]),s._v(" 返回空，而默认的 "),a("code",[s._v("getOption")]),s._v(" 及 "),a("code",[s._v("setOption")]),s._v(" 方法抛出 "),a("code",[s._v("UnsupportedOperationException")])]),s._v(" "),a("li",[s._v("JNI NewDirectByteBuffer 创建的 Direct Buffer 为 "),a("code",[s._v("java.nio.ByteOrder.BIG_ENDIAN")])]),s._v(" "),a("li",[s._v("Base64.Encoder 及 Base64.Decoder 可能抛出 "),a("code",[s._v("OutOfMemoryError")])]),s._v(" "),a("li",[s._v("改进了 Serial GC 的 Young pause time report")]),s._v(" "),a("li",[s._v("改进了 "),a("code",[s._v("MaxRAM")]),s._v(" 及 "),a("code",[s._v("UseCompressedOops")]),s._v(" 参数的行为")])]),s._v(" "),a("h3",{attrs:{id:"小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),a("p",[s._v("以上，就是 JDK13 中包含的主要特性。")]),s._v(" "),a("ul",[a("li",[s._v("语法层面，改进了 "),a("code",[s._v("Switch Expressions")]),s._v("，新增了 "),a("code",[s._v("Text Blocks")]),s._v("，二者皆处于 "),a("code",[s._v("Preview")]),s._v(" 状态")]),s._v(" "),a("li",[s._v("API 层面主要使用 NioSocketImpl 来替换 JDK1.0 的 PlainSocketImpl")]),s._v(" "),a("li",[s._v("GC 层面则改进了 ZGC，以支持 Uncommit Unused Memory")])]),s._v(" "),a("p",[s._v("而且，JDK13 并不是 LTS（长期支持）版本，如果你正在使用 Java 8（LTS）或者 Java 11（LTS），暂时可以不必升级到 Java 13。")]),s._v(" "),a("p",[s._v("这些年很多 Java 粉丝已经讨厌写那些冗长难看的代码了，有些转投到高效的 Python 门下，有的转用 Kotlin，有的去了新兴的 Go 那边。不过，Java 大叔凭着其广阔的领土，活跃高效的运转机构，以及其开放改革的心，还会有不少的粉丝追随他的。")]),s._v(" "),a("h2",{attrs:{id:"采用新版本的注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#采用新版本的注意事项"}},[s._v("#")]),s._v(" 采用新版本的注意事项")]),s._v(" "),a("p",[s._v("在采用新版本 Java 之前必须考虑的一些注意事项/风险。")]),s._v(" "),a("h3",{attrs:{id:"注意1-被新版本系列绑架"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意1-被新版本系列绑架"}},[s._v("#")]),s._v(" 注意1：被新版本系列绑架")]),s._v(" "),a("p",[s._v("如果采用了 Java 12 并使用新的语言特性或新的 API，这意味着实际上你已将项目绑定到 Java 的新版本系列。接下来你必须采用 Java 13、14、15、16 和 17。")]),s._v(" "),a("p",[s._v("使用了新版本，每个版本的使用寿命为六个月，并且在发布后仅七个月就过时了。这是因为每个版本只有在六个月内提供安全补丁，发布后 1 个月的第一个补丁和发布后 4 个月的第二个补丁。7 个月后，下一组安全补丁会发布，但旧版本不能获取更新。")]),s._v(" "),a("p",[s._v("因此，你要判断自身的开发流程是否允许升级 Java 版本，一个月的时间窗口方面会不会太狭窄？或者你是否愿意在安全基线以下的 Java 版本上运行？")]),s._v(" "),a("h3",{attrs:{id:"注意2-升级的绊脚石"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意2-升级的绊脚石"}},[s._v("#")]),s._v(" 注意2：升级的绊脚石")]),s._v(" "),a("p",[s._v("实际使用中有很多阻止我们升级 Java 的因素，下面列出一些常见的：")]),s._v(" "),a("ul",[a("li",[a("p",[a("strong",[s._v("开发资源不足")]),s._v("：你的团队可能会非常忙碌或规模太小，你能保证两年后从 Java 15 升级到 16 的开发时间吗")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("构建工具和 IDEA")]),s._v("：使用的 IDEA 是否会在发布当天支持每个新版本？Maven? Gradle 呢? 如果不是，你有后备计划吗？请记住，你只有 1 个月的时间来完成升级、测试并将其发布到生产环境中。此外还包括 Checkstyle， JaCoCo，PMD，SpotBugs 等等其他工具")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("依赖关系")]),s._v("：你的依赖关系是否都准备好用于每个新版本？请记住，它不仅仅是直接依赖项，而是技术堆栈中的所有内容。字节码操作库尤其受到影响，例如 ByteBuddy 和 ASM")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("框架")]),s._v("：这是另一种依赖，但是一个大而重要的依赖。在一个月的狭窄时间窗口内，Spring 会每六个月发布一个新版本吗？Jakarta EE（以前的 Java EE）会吗？如果它们不这样做会怎么样")])])]),s._v(" "),a("p",[s._v("现在，任何阻挡者的传统方法都是等待：在开始升级之前等待 6 到 12 个月，以便为工具，库和框架提供修复任何错误的机会。")]),s._v(" "),a("h3",{attrs:{id:"注意3-云-托管-部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意3-云-托管-部署"}},[s._v("#")]),s._v(" 注意3：云/托管/部署")]),s._v(" "),a("p",[s._v("你是否可以控制代码在生产环境中的运行位置和方式？例如，如果你在 AWS（Amazon Web Service） Lambda 中运行代码，则无法控制。AWS Lambda 没有采用 Java 9 或 10，甚至没有采用 Java 11。所以除非 AWS 提供公共保证以支持每个新的 Java 版本，否则根本无法采用 Java 12。（我的工作假设是 AWS Lambda 仅支持主要的 LTS 版本，由 "),a("a",{attrs:{href:"https://twitter.com/jodastephen/status/1062678987720310786",target:"_blank",rel:"noopener noreferrer"}},[s._v("Amazon Corretto JDK 公告支持"),a("OutboundLink")],1),s._v("。）")]),s._v(" "),a("p",[s._v("如何托管你的 CI 系统？Jenkins、Travis、Circle、Shippable、GitLab 会快速更新吗？如果不是，你会怎么做？")]),s._v(" "),a("h3",{attrs:{id:"注意4-为采用新版本进行规划"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意4-为采用新版本进行规划"}},[s._v("#")]),s._v(" 注意4：为采用新版本进行规划")]),s._v(" "),a("p",[s._v("如果正在考虑采用新版本的 Java，建议你准备一份现在所依赖的所有内容的清单，或者可能在未来 3 年内会依赖的。你需要保证该列表中的所有内容都能正常工作，并与新版本一起升级，或者如果该依赖项不再更新，请制定好计划。以某位互联网开发者为例，他列的清单如下：")]),s._v(" "),a("ul",[a("li",[s._v("Amazon AWS")]),s._v(" "),a("li",[s._v("Eclipse")]),s._v(" "),a("li",[s._v("IntelliJ")]),s._v(" "),a("li",[s._v("Travis CI")]),s._v(" "),a("li",[s._v("Shippable CI")]),s._v(" "),a("li",[s._v("Maven")]),s._v(" "),a("li",[s._v("Maven 插件（compile、jar、source、javadoc 等）")]),s._v(" "),a("li",[s._v("Checkstyle，以及相关的 IDE 插件和 Maven 插件")]),s._v(" "),a("li",[s._v("JaCoCo，以及相关的 IDE 插件和 Maven 插件")]),s._v(" "),a("li",[s._v("PMD 和相关的 Maven 插件")]),s._v(" "),a("li",[s._v("SpotBugs 和相关的 Maven 插件")]),s._v(" "),a("li",[s._v("OSGi bundle metadata tool")]),s._v(" "),a("li",[s._v("Bytecode 工具（Byte buddy / ASM etc）")]),s._v(" "),a("li",[s._v("超过 100 个 jar 包依赖项")])]),s._v(" "),a("p",[s._v("说了这么多，当然不是鼓励大家不进行升级，新语言特性带来的好处以及性能增强会让开发者受益，但升级背后的风险也应该考虑进去。")]),s._v(" "),a("h3",{attrs:{id:"注意5-其他第三方厂商的声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意5-其他第三方厂商的声明"}},[s._v("#")]),s._v(" 注意5：其他第三方厂商的声明")]),s._v(" "),a("p",[s._v("Spring 框架已经在视频中表达了对 Java 12 的策略。关键部分是（Spring 官方声明）：")]),s._v(" "),a("ul",[a("li",[s._v("Java 8 和 11 作为 LTS 版本会持续获得我们的正式支持，对于过渡版本，我们也会尽最大努力支持，但它们不会获得正式的生产环境支持。如果你升级到 Java 11，我们非常愿意和你合作，因为长期支持版本才是我们关注的重心，对于 Java 12 及更高版本我们会尽最大的努力")])]),s._v(" "),a("p",[s._v("作为典型软件供应商的一个例子，Liferay 声明如下：")]),s._v(" "),a("ul",[a("li",[s._v("Liferay 已决定不会对 JDK 的每个主要版本进行认证。我们将选择遵循 Oracle 的主导并仅认证标记为 LTS 的版本")])]),s._v(" "),a("p",[s._v("个人的想法：")]),s._v(" "),a("ul",[a("li",[s._v("想象一下汽车制造商的类似行为：\n"),a("ul",[a("li",[s._v("每 6 个月重新设计和发布一次汽车")]),s._v(" "),a("li",[s._v("从 2018 年开始，每三年只提供一次完整的保修")]),s._v(" "),a("li",[s._v("如果客户购买 2019 型号并且在 6 个月内出现问题，他们必须等待并购买 2020 修复模型")]),s._v(" "),a("li",[s._v("2020 型号是电动的，但你的城镇的基础设施还不支持电充等设备支持，更不用说座椅已经改变并导致腰痛")]),s._v(" "),a("li",[s._v("不用担心，购买 2020.3 型号")])])])]),s._v(" "),a("h2",{attrs:{id:"最后"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最后"}},[s._v("#")]),s._v(" 最后")]),s._v(" "),a("h3",{attrs:{id:"再谈jdk版本更新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#再谈jdk版本更新"}},[s._v("#")]),s._v(" 再谈JDK版本更新")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/Java/20220212171037.png",alt:"image-20220212171036126"}})]),s._v(" "),a("p",[s._v("在 Java 9 之前，当一个版本被宣布为首选版本，存在一个「培育」（bedded-in）新 GA 版本的重叠期。在此期间，上一个版本将会继续进行免费更新。为确保新旧版本间的干净切换，即便旧版本已不再是首选版本，通常也会继续维护 12 个月以上。但是 "),a("strong",[s._v("随着 Java 版本发布更改为遵循严格的时间表后，事实上宣告了传统的免费支持期将寿终正寝")]),s._v("。")]),s._v(" "),a("p",[a("strong",[s._v("也许不会有太多公司直接选择 JDK12、JDK 13，但个别的生产实践并不遥远")]),s._v("。比如，实际工作场景中，利用 JDK 12 的 Abortable Mixed Collections for G1，解决了 HDFS 在特定场景中 G1 Evacuation 时间过长的困扰，虽然最后团队选择将其 backport 到了自己的 JDK11 版本中，但如果没有快速交付的预览版 JDK12，也不会如此快速的得到结论。")]),s._v(" "),a("p",[s._v("而对另一个问题，目前看是非常成功的，"),a("strong",[s._v("解开了 Java/JVM 演进的许多枷锁，至关重要的是，OpenJDK 的权力中心，正在转移到开发社区和开发者手中")]),s._v("。在新的模式中，既可以利用 LTS 满足企业长期可靠支持的需求，也可以满足各种开发者对于新特性迭代的诉求。你可能注意到了 "),a("code",[s._v("Switch Expressions")]),s._v(" 被打上了预览（Preview）的标签， Shenandoah GC 则是实验（Experimental）特性，这些都是以往的发布周期下不大现实的，因为用 2-3 年的最小间隔粒度来实验一个特性，基本是不现实的。")]),s._v(" "),a("p",[s._v("可以预计，JDK8 在未来的一段时间仍将是主流，我们已经注意到 Amazon、Alibaba、Redhat、AdoptOpenJDK 等等厂商或社区，纷纷发布了自己的 JDK8 等产品，开始竞赛长期支持版本 JDK 的主导权，这是非常好的迹象，反映了主流厂商对于 Java 的投资力度增大。")]),s._v(" "),a("p",[s._v("是否会带来 Java/JVM 的碎片化呢？多少会发生一些，但从目前的合作模式来看，OpenJDK 仍然是合作的中心，主导这 Java 历史版本维护和未来的演进路线。")]),s._v(" "),a("h3",{attrs:{id:"oracle撒手-openjdk继续向前"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#oracle撒手-openjdk继续向前"}},[s._v("#")]),s._v(" Oracle撒手，OpenJDK继续向前")]),s._v(" "),a("p",[s._v("Java 8 是目前使用率最高的一个 Java 版本，发布于 2014 年，而 Oracle 对 Java 8 的官方支持时间持续到 2020 年 12 月，之后将不再为个人桌面用户提供 Oracle JDK 8 的修复更新；在 2019 年 1 月之后，不再提供免费的商业版本更新，届时想要继续获得 Oracle 的商业支持和维护，需付费订阅。")]),s._v(" "),a("p",[s._v("近日，Oracle 的销售代表发出的一封邮件引起了热议，该邮件称「Java 8 的非公开可用的关键补丁更新」将于 2019 年 4 月 16 日发布，拥有有效许可证的客户才可以享用。邮件继续称，如果没有安装这些更新，可能导致「你的服务器和桌面环境暴露且易受攻击」。")]),s._v(" "),a("p",[s._v("但在许多 Java 用户看来，这封邮件像是一种敲诈勒索或恐吓策略。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/Java/20220212171333.png",alt:"image-20220212171332368"}})]),s._v(" "),a("p",[s._v("虽然 Oracle 官方选择了不再支持，但 Java 社区却把担子接了下来。红帽 Java 平台团队的首席工程师 Andrew Haley 曾表示，红帽计划在 2023 年之前继续提供对 OpenJDK 8 的支持：")]),s._v(" "),a("ul",[a("li",[s._v("在我看来，这算比较正常的。几年前，OpenJDK 6 更新（JDK6u）项目被 Oracle 放弃，我接管了它，然后 OpenJDK 7 也发生了同样的事情。最后，Azul 的 Andrew Brygin 接管了 OpenJDK 6。由来自多个组织成员组成的 OpenJDK Vulnerability Group 就重要的安全问题进行协作。"),a("strong",[s._v("在广大的 OpenJDK 社区和我的团队（Red Hat）的帮助下，我们定期为关键 Bug 和安全漏洞提供更新。我觉得这样的过程同样适用于 OpenJDK 8 和下一个长期支持版本，即 OpenJDK 11")]),s._v("。如果可以得到社区的支持，我很高兴能够领导 JDK 8 更新项目和 JDK 11 更新项目")])]),s._v(" "),a("p",[s._v("除了红帽以外，AWS 推出了 OpenJDK 长期支持版本 Amazon Corretto。阿里巴巴也开源了 OpenJDK 长期支持版本 Alibaba Dragonwell。")]),s._v(" "),a("h3",{attrs:{id:"未来展望"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#未来展望"}},[s._v("#")]),s._v(" 未来展望")]),s._v(" "),a("p",[s._v("Java 的变化速度从未如此之快——如今，该语言的新版本每六个月就会发布一次。")]),s._v(" "),a("p",[s._v("而之所以能够实现如此重大的转变，自然离不开一系列专注于 "),a("strong",[s._v("提高其性能")]),s._v(" 与 "),a("strong",[s._v("添加新功能")]),s._v(" 的协作性项目的贡献。这些项目的目标可谓雄心勃勃。正如 JetBrains 开发者布道师 Trisha Gee 在 QCon 伦敦 2019 大会上所言：Java 即将迎来很多超酷的东西。")]),s._v(" "),a("p",[s._v("而发展道路中的以下三大主要项目，将有助于确定 Java 的未来方向。")]),s._v(" "),a("blockquote",[a("p",[s._v("项目一：Loom 项目")])]),s._v(" "),a("p",[s._v("尝试改进 Java 语言的并发处理方式，或者说是在对计算机在不同指令集执行之间切换能力的探索。")]),s._v(" "),a("p",[s._v("甲骨文公司 Loom 项目技术负责人 Ron Pressler 在 QCon 伦敦 2019 大会上向希望编写软件以处理并发任务的 Java 开发者们提出了两种都不够完美的选项："),a("strong",[s._v("要么编写无法通过扩展处理大量并发任务的「简单同步阻塞代码」，要么编写可扩展但编写难度极高且调试过程复杂的异步代码")]),s._v("。")]),s._v(" "),a("p",[s._v("为了寻求解决这个问题的方法，Loom 项目引入了一种将任务拆分为线程的新方法——所谓线程，即是指计算机在运行指令时的最小可能执行单元。在这方面，"),a("strong",[s._v("Loom 引入了被称为 fibers 的新型轻量级用户线程")]),s._v("。")]),s._v(" "),a("p",[s._v("他在大会上指出："),a("strong",[s._v("利用 fibers，如果我们确保其轻量化程度高于内核提供的线程，那么问题就得到了解决。大家将能够尽可能多地使用这些用户模式下的轻量级线程，且基本不会出现任何阻塞问题")]),s._v("。")]),s._v(" "),a("p",[s._v("利用这些新的 fibers，用户将能够扩展 Java 虚拟机（JVM）以支持定界延续（delimited continuations）机制，从而使得指令集的执行实现暂停以及恢复。对这些延续进行暂停与恢复的任务将由 Java 中的 ForkJoinPool 调度程序以异步模式处理。")]),s._v(" "),a("p",[s._v("根据说明文档所言，"),a("strong",[s._v("fibers 将使用与 Java 现有 Thread 类非常相似的 API")]),s._v("，这意味着 Java 开发人员的学习曲线应该不会太过陡峭。")]),s._v(" "),a("blockquote",[a("p",[s._v("项目二：Amber 项目")])]),s._v(" "),a("p",[s._v("Amber 项目的目标，在于 "),a("strong",[s._v("支持「更小、面向生产力的 Java 语言功能」的开发，从而加快将新功能添加至 Java 语言中的速度")]),s._v("。")]),s._v(" "),a("p",[s._v("这套方案非常适合自 Java 9 以来，以更快速度持续发布的各 Java 新版本。")]),s._v(" "),a("p",[s._v("目前，以下 JDK 增强提案（简称 JEP）正在进行当中，并隶属于 Amber 项目之内。")]),s._v(" "),a("p",[a("strong",[s._v("生字符串")])]),s._v(" "),a("p",[s._v("生字符串使得开发人员能够更轻松地对文本进行适当格式化，且无需引入由转义字符带来的复杂性。")]),s._v(" "),a("p",[s._v("举例来说，开发人员不必使用转义字符来表示换行符，因此在以下字符串中：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Hello")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("World")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("可以直接编写为：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("`"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Hello")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("World")]),s._v("`\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("而非原本的：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello World"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("该提案的说明文档中提到，这一变更将使得各类文本客串的输入变得更加简单，包括文件路径以及 SQL 语句等等。")]),s._v(" "),a("p",[s._v("如大家所见，生字符串应被包含在反引号之内。")]),s._v(" "),a("p",[s._v("用于 JDK API 的 Java 编译器 Intrinsic："),a("code",[s._v("https://openjdk.java.net/jeps/348")]),s._v("。此项提案将允许开发人员对需要定期调用的重要代码段进行性能优化。")]),s._v(" "),a("p",[a("strong",[s._v("Pattern Matching")])]),s._v(" "),a("p",[s._v("官网介绍地址："),a("code",[s._v("https://openjdk.java.net/jeps/305")]),s._v("。")]),s._v(" "),a("p",[s._v("Pattern Matching 能够简化利用 Java 中 instanceof 运算符检查对象是否属于特定类的过程，而后提取该对象的组件以进行进一步处理。")]),s._v(" "),a("p",[s._v("如此一来，以下操作语法：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("instanceof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" intValue "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("intValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// use")]),s._v("\nintValue "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("将可被简化为：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("instanceof")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// can use i here, of type Integer }")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("Switch Expressions")])]),s._v(" "),a("p",[s._v("官网介绍地址："),a("code",[s._v("https://openjdk.java.net/jeps/325")]),s._v("。")]),s._v(" "),a("p",[s._v("Switch expressions 已经在 Java 12 当中以预览版形式推出，允许开发人员利用更简单的语法通过 Switch 语句为输入内容指定不同的响应方式。")]),s._v(" "),a("p",[s._v("举例来说，现在我们不再需要始终在以下语法当中使用 Switch 语句：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" type "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PortType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FTP")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("而可以采取以下更为简洁的表达方式：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Switch")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PortType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FTP")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[s._v("项目三：Valhalla 项目")])]),s._v(" "),a("p",[a("strong",[s._v("Valhalla 项目专注于支持高级 JVM 与语言功能的开发。")])]),s._v(" "),a("p",[s._v("目前 Valhalla 项目的候选提案还比较有限，具体包括：")]),s._v(" "),a("p",[a("strong",[s._v("Value Types")])]),s._v(" "),a("p",[s._v("官网介绍地址："),a("code",[s._v("https://openjdk.java.net/jeps/169")]),s._v("。")]),s._v(" "),a("p",[s._v("此项提案旨在允许 JVM 处理一种新的类型，即 Value Types。")]),s._v(" "),a("p",[a("strong",[s._v("这些新的不可变类型将拥有与 int 等基元类似的内存效率")]),s._v("，但同时又与普通类一样能够保存一整套基元集合。提案说明文档中指出，其目标在于「为 JVM 基础设施提供处理不可变与无引用对象的能力，从而实现使用非基元类型进行高效按值计算的目标。」")]),s._v(" "),a("p",[a("strong",[s._v("Generic Specialization")])]),s._v(" "),a("p",[s._v("官网介绍地址："),a("code",[s._v("https://openjdk.java.net/jeps/218")]),s._v("。")]),s._v(" "),a("p",[s._v("此项提案 "),a("strong",[s._v("扩展了适用于泛型的具体类型")]),s._v("，其中包括基元以及即将推出的 Value Types。")])])}),[],!1,null,null,null);a.default=e.exports}}]);