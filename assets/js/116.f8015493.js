(window.webpackJsonp=window.webpackJsonp||[]).push([[116],{440:function(s,t,a){"use strict";a.r(t);var n=a(3),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#标记阶段概述"}},[s._v("标记阶段概述")])]),t("li",[t("a",{attrs:{href:"#标记阶段-引用计数算法"}},[s._v("标记阶段：引用计数算法")]),t("ul",[t("li",[t("a",{attrs:{href:"#循环引用"}},[s._v("循环引用")])]),t("li",[t("a",{attrs:{href:"#举例"}},[s._v("举例")])]),t("li",[t("a",{attrs:{href:"#小结"}},[s._v("小结")])])])]),t("li",[t("a",{attrs:{href:"#标记阶段-可达性分析算法"}},[s._v("标记阶段：可达性分析算法")]),t("ul",[t("li",[t("a",{attrs:{href:"#概念"}},[s._v("概念")])]),t("li",[t("a",{attrs:{href:"#思路"}},[s._v("思路")])]),t("li",[t("a",{attrs:{href:"#gc-roots可以是哪些"}},[s._v("GC Roots可以是哪些？")])]),t("li",[t("a",{attrs:{href:"#总结"}},[s._v("总结")])]),t("li",[t("a",{attrs:{href:"#识别小技巧"}},[s._v("识别小技巧")])]),t("li",[t("a",{attrs:{href:"#注意"}},[s._v("注意")])])])]),t("li",[t("a",{attrs:{href:"#对象的finalization机制"}},[s._v("对象的finalization机制")]),t("ul",[t("li",[t("a",{attrs:{href:"#注意"}},[s._v("注意")])]),t("li",[t("a",{attrs:{href:"#生存还是死亡"}},[s._v("生存还是死亡？")])]),t("li",[t("a",{attrs:{href:"#具体过程"}},[s._v("具体过程")])]),t("li",[t("a",{attrs:{href:"#代码演示"}},[s._v("代码演示")])])])]),t("li",[t("a",{attrs:{href:"#mat与jprofiler的gc-roots溯源"}},[s._v("MAT与JProfiler的GC Roots溯源")]),t("ul",[t("li",[t("a",{attrs:{href:"#mat是什么"}},[s._v("MAT是什么？")])]),t("li",[t("a",{attrs:{href:"#命令行使用jmap"}},[s._v("命令行使用jmap")])]),t("li",[t("a",{attrs:{href:"#使用jvisualvm"}},[s._v("使用JVIsualVM")])]),t("li",[t("a",{attrs:{href:"#使用mat打开dump文件"}},[s._v("使用MAT打开Dump文件")])]),t("li",[t("a",{attrs:{href:"#jprofiler的gc-roots溯源"}},[s._v("JProfiler的GC Roots溯源")])]),t("li",[t("a",{attrs:{href:"#如何判断什么原因造成oom"}},[s._v("如何判断什么原因造成OOM")])])])]),t("li",[t("a",{attrs:{href:"#清除阶段概述"}},[s._v("清除阶段概述")])]),t("li",[t("a",{attrs:{href:"#清除阶段-标记-清除算法"}},[s._v("清除阶段：标记-清除算法")]),t("ul",[t("li",[t("a",{attrs:{href:"#执行过程"}},[s._v("执行过程")])]),t("li",[t("a",{attrs:{href:"#什么是清除"}},[s._v("什么是清除？")])]),t("li",[t("a",{attrs:{href:"#缺点"}},[s._v("缺点")])])])]),t("li",[t("a",{attrs:{href:"#清除阶段-复制算法"}},[s._v("清除阶段：复制算法")]),t("ul",[t("li",[t("a",{attrs:{href:"#背景"}},[s._v("背景")])]),t("li",[t("a",{attrs:{href:"#核心思想"}},[s._v("核心思想")])]),t("li",[t("a",{attrs:{href:"#优点"}},[s._v("优点")])]),t("li",[t("a",{attrs:{href:"#缺点"}},[s._v("缺点")])]),t("li",[t("a",{attrs:{href:"#注意"}},[s._v("注意")])])])]),t("li",[t("a",{attrs:{href:"#清除阶段-标记-整理算法"}},[s._v("清除阶段：标记-整理算法")]),t("ul",[t("li",[t("a",{attrs:{href:"#背景"}},[s._v("背景")])]),t("li",[t("a",{attrs:{href:"#执行过程"}},[s._v("执行过程")])]),t("li",[t("a",{attrs:{href:"#标清和标整的区别"}},[s._v("标清和标整的区别")])]),t("li",[t("a",{attrs:{href:"#标整的优缺点"}},[s._v("标整的优缺点")])])])]),t("li",[t("a",{attrs:{href:"#清除阶段方法小结"}},[s._v("清除阶段方法小结")])]),t("li",[t("a",{attrs:{href:"#分代收集算法"}},[s._v("分代收集算法")])]),t("li",[t("a",{attrs:{href:"#增量收集算法"}},[s._v("增量收集算法")]),t("ul",[t("li",[t("a",{attrs:{href:"#概述"}},[s._v("概述")])]),t("li",[t("a",{attrs:{href:"#缺点"}},[s._v("缺点")])])])]),t("li",[t("a",{attrs:{href:"#分区算法"}},[s._v("分区算法")])]),t("li",[t("a",{attrs:{href:"#写到最后"}},[s._v("写到最后")])])])]),t("p"),s._v(" "),t("h2",{attrs:{id:"标记阶段概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#标记阶段概述"}},[s._v("#")]),s._v(" 标记阶段概述")]),s._v(" "),t("p",[s._v("在堆里存放着几乎所有的 Java 对象实例，在 GC 执行垃圾回收之前，首先 "),t("strong",[s._v("需要区分出内存中哪些是存活对象，哪些是已经死亡的对象")]),s._v("。只有被标记为己经死亡的对象，GC 才会在执行垃圾回收时，释放掉其所占用的内存空间，因此这个过程我们可以称 "),t("strong",[s._v("为垃圾标记阶段")]),s._v("。")]),s._v(" "),t("p",[s._v("那么在 JVM 中究竟是如何标记一个死亡对象呢？简单来说，当一个对象已经不再被任何的存活对象继续引用时，就可以宣判为已经死亡。")]),s._v(" "),t("p",[s._v("判断对象存活一般有两种方式："),t("strong",[s._v("引用计数算法")]),s._v(" 和 "),t("strong",[s._v("可达性分析算法")]),s._v("。")]),s._v(" "),t("h2",{attrs:{id:"标记阶段-引用计数算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#标记阶段-引用计数算法"}},[s._v("#")]),s._v(" 标记阶段：引用计数算法")]),s._v(" "),t("p",[s._v("引用计数算法（Reference Counting）比较简单，对每个对象保存一个整型的 "),t("strong",[s._v("引用计数器属性")]),s._v("。"),t("strong",[s._v("用于记录对象被引用的情况")]),s._v("。")]),s._v(" "),t("p",[s._v("对于一个对象 A，只要有任何一个对象引用了 A，则 A 的引用计数器就加 1；当引用失效时，引用计数器就减 1。只要对象 A 的引用计数器的值为 0，即表示对象 A 不可能再被使用，可进行回收。")]),s._v(" "),t("p",[s._v("优点：")]),s._v(" "),t("ul",[t("li",[s._v("实现简单，垃圾对象便于辨识；判定效率高，回收没有延迟性")])]),s._v(" "),t("p",[s._v("缺点：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("它需要单独的字段存储计数器，这样的做法 "),t("strong",[s._v("增加了存储空间的开销")])])]),s._v(" "),t("li",[t("p",[s._v("每次赋值都需要更新计数器，伴随着加法和减法操作，这 "),t("strong",[s._v("增加了时间开销")])])]),s._v(" "),t("li",[t("p",[s._v("引用计数器有一个严重的问题，即无法处理循环引用的情况。这是一条致命缺陷，导致在 "),t("strong",[s._v("Java 的垃圾回收器中没有使用引用计数算法")])])])]),s._v(" "),t("h3",{attrs:{id:"循环引用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#循环引用"}},[s._v("#")]),s._v(" 循环引用")]),s._v(" "),t("p",[s._v("当 p 的指针断开的时候，内部的引用形成一个循环，这就是循环引用，从而造成内存泄漏")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/Java/20220116162836.png",alt:"image-20200712102205795"}})]),s._v(" "),t("h3",{attrs:{id:"举例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#举例"}},[s._v("#")]),s._v(" 举例")]),s._v(" "),t("p",[s._v("我们使用一个案例来测试 Java 中是否采用的是引用计数算法")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * 引用计数算法测试\n *\n */")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RefCountGC")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这个成员属性的唯一作用就是占用一点内存")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" bigSize "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 5MB")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 引用")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" reference "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RefCountGC")]),s._v(" obj1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RefCountGC")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RefCountGC")]),s._v(" obj2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RefCountGC")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        obj1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("reference "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" obj2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        obj2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("reference "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" obj1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        obj1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        obj2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 显示的执行垃圾收集行为，判断 obj1 和 obj2 是否被回收？")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("gc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br")])]),t("p",[s._v("运行结果")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("GC")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("gc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PSYoungGen")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("15490")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("808K")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("76288")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("15490")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("816K")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("251392")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0061980")]),s._v(" secs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Times")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" user"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.00")]),s._v(" sys"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.00")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" real"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.36")]),s._v(" secs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Full")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("GC")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("gc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PSYoungGen")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("808")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("0K")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("76288")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ParOldGen")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("672K")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("175104")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("816")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("672K")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("251392")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Metaspace")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3479")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("3479K")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1056768")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0045983")]),s._v(" secs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Times")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" user"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.00")]),s._v(" sys"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.00")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" real"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.00")]),s._v(" secs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Heap")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PSYoungGen")]),s._v("      total "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("76288")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" used "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("655")]),s._v("K "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x000000076b500000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x0000000770a00000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x00000007c0000000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  eden space "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("65536")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" used "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x000000076b500000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x000000076b5a3ee8")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x000000076f500000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  from space "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10752")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" used "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x000000076f500000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x000000076f500000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x000000076ff80000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("to")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("space")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10752")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" used "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x000000076ff80000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x000000076ff80000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x0000000770a00000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ParOldGen")]),s._v("       total "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("175104")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" used "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("672")]),s._v("K "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x00000006c1e00000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x00000006cc900000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x000000076b500000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  object space "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("175104")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" used "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x00000006c1e00000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x00000006c1ea8070")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x00000006cc900000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Metaspace")]),s._v("       used "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3486")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" capacity "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4496")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" committed "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4864")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" reserved "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1056768")]),s._v("K\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" space    used "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("385")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" capacity "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("388")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" committed "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("512")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" reserved "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1048576")]),s._v("K\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[s._v("我们能够看到，上述进行了 GC 收集的行为，将上述的新生代中的两个对象都进行回收了")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PSYoungGen")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("15490")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("808K")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("76288")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("15490")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("816K")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("251392")]),s._v("K"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("如果使用引用计数算法，那么这两个对象将会无法回收（因为彼此互相使用，计数器为 2，断开引用后只是变成 1）。而现在两个对象被回收了，说明 Java 使用的不是引用计数算法来进行标记的。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/Java/20220116162905.png",alt:"image-20200712103230349"}})]),s._v(" "),t("h3",{attrs:{id:"小结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),t("p",[s._v("引用计数算法，是很多语言的资源回收选择，例如因人工智能而更加火热的 Python，它更是同时支持引用计数和垃圾收集机制。")]),s._v(" "),t("p",[s._v("具体哪种最优是要看场景的，业界有大规模实践中仅保留引用计数机制，以提高吞吐量的尝试。")]),s._v(" "),t("p",[s._v("Java 并没有选择引用计数，是因为其存在一个基本的难题，也就是很难处理循环引用关系。"),t("strong",[s._v("Python 如何解决循环引用？")])]),s._v(" "),t("p",[s._v("手动解除：很好理解，就是在合适的时机，解除引用关系。")]),s._v(" "),t("p",[s._v("使用弱引用 weakref，weakref 是 Python 提供的标准库，旨在解决循环引用。")]),s._v(" "),t("h2",{attrs:{id:"标记阶段-可达性分析算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#标记阶段-可达性分析算法"}},[s._v("#")]),s._v(" 标记阶段：可达性分析算法")]),s._v(" "),t("h3",{attrs:{id:"概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[s._v("#")]),s._v(" 概念")]),s._v(" "),t("p",[s._v("可达性分析算法：也可以称为根搜索算法、追踪性垃圾收集。")]),s._v(" "),t("p",[s._v("相对于引用计数算法而言，可达性分析算法不仅同样具备实现简单和执行高效等特点，更重要的是该算法可以有效地 "),t("strong",[s._v("解决在引用计数算法中循环引用的问题，防止内存泄漏的发生")]),s._v("。")]),s._v(" "),t("p",[s._v("相较于引用计数算法，这里的可达性分析就是 Java、C# 选择的。这种类型的垃圾收集通常也叫作追踪性垃圾收集（Tracing Garbage Collection）。")]),s._v(" "),t("h3",{attrs:{id:"思路"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#思路"}},[s._v("#")]),s._v(" 思路")]),s._v(" "),t("p",[s._v("所谓「GCRoots」根集合就是一组必须活跃的引用。")]),s._v(" "),t("p",[s._v("基本思路：")]),s._v(" "),t("ul",[t("li",[s._v("可达性分析算法是以根对象集合（GCRoots）为起始点，按照从上至下的方式搜索被根对象集合所连接的目标对象是否可达")]),s._v(" "),t("li",[s._v("使用可达性分析算法后，内存中的存活对象都会被根对象集合直接或间接连接着，搜索所走过的路径称为 "),t("strong",[s._v("引用链")]),s._v("（Reference Chain）")]),s._v(" "),t("li",[s._v("如果目标对象没有任何引用链相连，则是不可达的，就意味着该对象己经死亡，可以标记为垃圾对象")]),s._v(" "),t("li",[s._v("在可达性分析算法中，只有能够被根对象集合直接或者间接连接的对象才是存活对象")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/Java/20220116162948.png",alt:"image-20200712104149246"}})]),s._v(" "),t("p",[s._v("官场上的裙带关系，可达性分析在人类关系网中")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/Java/20220116162949.png",alt:"image-20200712104312406"}})]),s._v(" "),t("blockquote",[t("p",[s._v("一人得道，鸡犬升天。")])]),s._v(" "),t("h3",{attrs:{id:"gc-roots可以是哪些"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gc-roots可以是哪些"}},[s._v("#")]),s._v(" GC Roots可以是哪些？")]),s._v(" "),t("ul",[t("li",[s._v("虚拟机栈中引用的对象\n"),t("ul",[t("li",[s._v("比如：各个线程被调用的方法中使用到的参数、局部变量等")])])]),s._v(" "),t("li",[s._v("本地方法栈内 JNI（通常说的本地方法）引用的对象方法区中类静态属性引用的对象\n"),t("ul",[t("li",[s._v("比如：Java 类的引用类型静态变量")])])]),s._v(" "),t("li",[s._v("方法区中常量引用的对象\n"),t("ul",[t("li",[s._v("比如：字符串常量池（String Table）里的引用")])])]),s._v(" "),t("li",[s._v("所有被同步锁 synchronized 持有的对象")]),s._v(" "),t("li",[s._v("Java 虚拟机内部的引用。\n"),t("ul",[t("li",[s._v("基本数据类型对应的 Class 对象，一些常驻的异常对象（如：Nu11PointerException、outofMemoryError），系统类加载器")])])]),s._v(" "),t("li",[s._v("反映 Java 虚拟机内部情况的 JMXBean、JVMTI 中注册的回调、本地代码缓存等")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/Java/20220124162244.png",alt:"image-20200712104622677"}})]),s._v(" "),t("h3",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),t("p",[s._v("总结一句话就是，除了堆空间外的一些结构，比如虚拟机栈、本地方法栈、方法区、字符串常量池等地方对堆空间进行引用的，都可以作为 GC Roots 进行可达性分析。")]),s._v(" "),t("p",[s._v("除了这些固定的 GC Roots 集合以外，根据用户所选用的垃圾收集器以及当前回收的内存区域不同，还可以有其他对象「临时性」地加入，共同构成完整 GC Roots 集合。比如：分代收集和局部回收（PartialGC）。")]),s._v(" "),t("p",[s._v("如果只针对 Java 堆中的某一块区域进行垃圾回收（比如：典型的只针对新生代），必须考虑到内存区域是虚拟机自己的实现细节，更不是孤立封闭的，这个区域的对象完全有可能被其他区域的对象所引用，这时候就需要一并将关联的区域对象也加入 GC Roots 集合中去考虑，才能保证可达性分析的准确性。")]),s._v(" "),t("h3",{attrs:{id:"识别小技巧"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#识别小技巧"}},[s._v("#")]),s._v(" 识别小技巧")]),s._v(" "),t("p",[s._v("由于 Root 采用栈方式存放变量和指针，所以如果一个指针，它保存了堆内存里面的对象，但是自己又不存放在堆内存里面，那它就是一个 Root。")]),s._v(" "),t("h3",{attrs:{id:"注意"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[s._v("#")]),s._v(" 注意")]),s._v(" "),t("p",[s._v("如果要使用可达性分析算法来判断内存是否可回收，那么分析工作必须在一个能保障一致性的快照中进行。这点不满足的话分析结果的准确性就无法保证。")]),s._v(" "),t("p",[s._v("这点也是导致 GC 进行时必须 "),t("code",[s._v("stop The World")]),s._v(" 的一个重要原因。")]),s._v(" "),t("p",[s._v("即使是号称（几乎）不会发生停顿的 CMS 收集器中，枚举根节点时也是必须要停顿的。")]),s._v(" "),t("h2",{attrs:{id:"对象的finalization机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#对象的finalization机制"}},[s._v("#")]),s._v(" 对象的finalization机制")]),s._v(" "),t("p",[s._v("Java 语言提供了 "),t("strong",[s._v("对象终止（finalization）机制")]),s._v(" 来允许开发人员提供对象被销毁之前的自定义处理逻辑。")]),s._v(" "),t("p",[s._v("当垃圾回收器发现没有引用指向一个对象，即：垃圾回收此对象之前，总会先调用这个对象的 "),t("code",[s._v("finalize()")]),s._v(" 方法。")]),s._v(" "),t("p",[t("code",[s._v("finalize()")]),s._v(" 方法允许在子类中被重写，用于在对象被回收时进行资源释放。通常在这个方法中进行一些资源释放和清理的工作，比如关闭文件、套接字和数据库连接等。(类似于 Vue 的 beforeDestroy 钩子，即死亡前的调用)")]),s._v(" "),t("h3",{attrs:{id:"注意-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注意-2"}},[s._v("#")]),s._v(" 注意")]),s._v(" "),t("p",[s._v("永远不要主动调用某个对象的 "),t("code",[s._v("finalize()")]),s._v(" 方法，它应该交给垃圾回收机制调用。理由包括下面三点：")]),s._v(" "),t("ul",[t("li",[s._v("在 "),t("code",[s._v("finalize()")]),s._v(" 时可能会导致对象复活")]),s._v(" "),t("li",[t("code",[s._v("finalize()")]),s._v(" 方法的执行时间是没有保障的，它完全由 GC 线程决定，极端情况下，若不发生 GC，则 "),t("code",[s._v("finalize()")]),s._v(" 方法将没有执行机会")]),s._v(" "),t("li",[s._v("因为优先级比较低，即使主动调用该方法，也不会因此就直接进行回收")]),s._v(" "),t("li",[s._v("一个糟糕的 "),t("code",[s._v("finalize()")]),s._v(" 会严重影响 GC 的性能")])]),s._v(" "),t("p",[s._v("从功能上来说，"),t("code",[s._v("finalize()")]),s._v(" 方法与 C++ 中的析构函数比较相似，但是 Java 采用的是基于垃圾回收器的自动内存管理机制，所以 "),t("code",[s._v("finalize()")]),s._v(" 方法在本质上不同于 C++ 中的析构函数。")]),s._v(" "),t("p",[s._v("由于 "),t("code",[s._v("finalize()")]),s._v(" 方法的存在，虚拟机中的对象一般处于三种可能的状态：可触及的、可复活的、不可触及的")]),s._v(" "),t("h3",{attrs:{id:"生存还是死亡"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#生存还是死亡"}},[s._v("#")]),s._v(" 生存还是死亡？")]),s._v(" "),t("p",[s._v("如果从所有的根节点都无法访问到某个对象，说明对象己经不再使用了。一般来说，此对象需要被回收。但事实上，也并非是「非死不可」的，这时候它们暂时处于「缓刑」阶段。"),t("strong",[s._v("一个无法触及的对象有可能在某一个条件下「复活」自己")]),s._v("，如果这样，那么对它的回收就是不合理的，为此，定义虚拟机中的对象可能的三种状态。如下：")]),s._v(" "),t("ul",[t("li",[s._v("可触及的：从根节点开始，可以到达这个对象")]),s._v(" "),t("li",[s._v("可复活的：对象的所有引用都被释放，但是对象有可能在 finalize() 中复活")]),s._v(" "),t("li",[s._v("不可触及的：对象的 finalize() 被调用，并且没有复活，那么就会进入不可触及状态。不可触及的对象不可能被复活，因为 "),t("strong",[s._v("finalize() 只会被调用一次")])])]),s._v(" "),t("p",[s._v("以上 3 种状态中，是由于 finalize() 方法的存在，进行的区分。只有在对象不可触及时才可以被回收。")]),s._v(" "),t("h3",{attrs:{id:"具体过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#具体过程"}},[s._v("#")]),s._v(" 具体过程")]),s._v(" "),t("p",[s._v("判定一个对象 objA 是否可回收，至少要经历两次标记过程：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("如果对象 objA 到 GC Roots 没有引用链，则进行第一次标记。")])]),s._v(" "),t("li",[t("p",[s._v("进行筛选，判断此对象是否有必要执行 "),t("code",[s._v("finalize()")]),s._v(" 方法")]),s._v(" "),t("ul",[t("li",[s._v("如果对象 objA 没有重写 "),t("code",[s._v("finalize()")]),s._v(" 方法，或者 "),t("code",[s._v("finalize()")]),s._v(" 方法已经被虚拟机调用过，则虚拟机视为「没有必要执行」，objA 被判定为不可触及的")]),s._v(" "),t("li",[s._v("如果对象 objA 重写了 "),t("code",[s._v("finalize()")]),s._v(" 方法，且还未执行过，那么 objA 会被插入到 F-Queue 队列中，由一个虚拟机自动创建的、低优先级的 Finalizer 线程触发其 "),t("code",[s._v("finalize()")]),s._v(" 方法执行")]),s._v(" "),t("li",[t("strong",[t("code",[s._v("finalize()")]),s._v(" 方法是对象逃脱死亡的最后机会")]),s._v("，稍后 GC 会对 F-Queue 队列中的对象进行第二次标记。如果 objA 在 "),t("code",[s._v("finalize()")]),s._v(" 方法中与引用链上的任何一个对象建立了联系，那么在第二次标记时，objA 会被移出「即将回收」集合。之后，对象会再次出现没有引用存在的情况。在这个情况下，"),t("code",[s._v("finalize()")]),s._v(" 方法不会被再次调用，对象会直接变成不可触及的状态，也就是说，一个对象的 "),t("code",[s._v("finalize()")]),s._v(" 方法只会被调用一次")])])])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/Java/20220116163418.png",alt:"image-20200712110411885"}})]),s._v(" "),t("p",[s._v("上图就是我们看到的 Finalizer 线程。")]),s._v(" "),t("h3",{attrs:{id:"代码演示"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代码演示"}},[s._v("#")]),s._v(" 代码演示")]),s._v(" "),t("p",[s._v("我们使用重写 finalize() 方法，然后在方法的内部，重写将其存放到 GC Roots 中")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * 测试 Object 类中 finalize() 方法，即对象的 finalization 机制。\n *\n */")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CanReliveObj")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CanReliveObj")]),s._v(" obj"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//类变量，属于 GC Root")]),s._v("\n\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//此方法只能被调用一次")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("protected")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("finalize")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Throwable")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("super")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("finalize")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"调用当前类重写的finalize()方法"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        obj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当前待回收的对象在 finalize() 方法中与引用链上的一个对象 obj 建立了联系")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            obj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CanReliveObj")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 对象第一次成功拯救自己")]),s._v("\n            obj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("gc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//调用垃圾回收器")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"第1次 gc"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 因为 Finalizer 线程优先级很低，暂停 2 秒，以等待它")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"obj is dead"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"obj is still alive"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"第2次 gc"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 下面这段代码与上面的完全相同，但是这次自救却失败了")]),s._v("\n            obj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("gc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 因为 Finalizer 线程优先级很低，暂停 2 秒，以等待它")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"obj is dead"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"obj is still alive"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InterruptedException")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br")])]),t("p",[t("strong",[s._v("如果注释掉 finalize() 方法")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 此方法只能被调用一次")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//protected void finalize() throws Throwable {")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    super.finalize();")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//    System.out.println("调用当前类重写的finalize()方法");')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    obj = this; // 当前待回收的对象在finalize()方法中与引用链上的一个对象obj建立了联系")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("输出结果：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("第"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("次 gc\nobj is dead\n第"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("次 gc\nobj is dead\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[t("strong",[s._v("取消 finalize() 方法的注释")])]),s._v(" "),t("p",[s._v("最后运行结果")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("第"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("次 gc\n调用当前类重写的"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("finalize")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("方法\nobj is still alive\n第"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("次 gc\nobj is dead\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("在进行第一次清除的时候，我们会执行 "),t("code",[s._v("finalize")]),s._v(" 方法，然后对象进行了一次自救操作，但是因为 "),t("code",[s._v("finalize")]),s._v(" 方法只会被调用一次，因此第二次该对象将会被垃圾清除。")]),s._v(" "),t("h2",{attrs:{id:"mat与jprofiler的gc-roots溯源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mat与jprofiler的gc-roots溯源"}},[s._v("#")]),s._v(" MAT与JProfiler的GC Roots溯源")]),s._v(" "),t("h3",{attrs:{id:"mat是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mat是什么"}},[s._v("#")]),s._v(" MAT是什么？")]),s._v(" "),t("p",[s._v("MAT 是 Memory Analyzer 的简称，它是一款功能强大的 Java 堆内存分析器。用于查找内存泄漏以及查看内存消耗情况。")]),s._v(" "),t("p",[s._v("MAT 是基于 Eclipse 开发的，是一款免费的性能分析工具。")]),s._v(" "),t("p",[s._v("大家可以在 "),t("code",[s._v("http://www.eclipse.org/mat/")]),s._v(" 下载并使用 MAT")]),s._v(" "),t("h3",{attrs:{id:"命令行使用jmap"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#命令行使用jmap"}},[s._v("#")]),s._v(" 命令行使用jmap")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/Java/20220116163507.png",alt:"image-20200712112026317"}})]),s._v(" "),t("h3",{attrs:{id:"使用jvisualvm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用jvisualvm"}},[s._v("#")]),s._v(" 使用JVIsualVM")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("GCRootsTest")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" numList "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArrayList")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Date")]),s._v(" birth "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Date")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            numList"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("valueOf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InterruptedException")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"数据添加完毕，请操作："')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Scanner")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("in"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("next")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        numList "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        birth "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"numList、birth已置空，请操作："')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Scanner")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("in"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("next")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"结束"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br")])]),t("p",[s._v("捕获的 heap dump 文件是一个临时文件，关闭 JVisualVM 后自动删除，若要保留，需要将其另存为文件。可通过以下方法捕获 heap dump：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("在左侧 Application（应用程序）子窗口中右击相应的应用程序，选择 Heap Dump（堆 Dump）")])]),s._v(" "),t("li",[t("p",[s._v("在 Monitor（监视）子标签页中点击 Heap Dump（堆 Dump）按钮。本地应用程序的 Heap dumps 作为应用程序标签页的一个子标签页打开。同时，heap dump 在左侧的 Application（应用程序）栏中对应一个含有时间戳的节点")])]),s._v(" "),t("li",[t("p",[s._v("右击这个节点选择 save as（另存为）即可将 heap dump 保存到本地")])])]),s._v(" "),t("p",[s._v("具体如图：")]),s._v(" "),t("p",[s._v("首先我们执行上方代码")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/Java/20220124174639.png",alt:"image-20220124174638810"}})]),s._v(" "),t("p",[s._v("进入 JVIsualVM 点击「堆 Dump」")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/Java/20220124174251.png",alt:"image-20220124174251135"}})]),s._v(" "),t("p",[s._v("右键 –> 另存为即可")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/Java/20220124174253.png",alt:"image-20220124174228565"}})]),s._v(" "),t("p",[s._v("回到代码，输入命令，继续执行程序")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/Java/20220124174742.png",alt:"image-20220124174741516"}})]),s._v(" "),t("p",[s._v("我们接着捕获第二张堆内存快照")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/Java/20220124174811.png",alt:"image-20220124174810322"}})]),s._v(" "),t("p",[s._v("我都放在了桌面上。")]),s._v(" "),t("h3",{attrs:{id:"使用mat打开dump文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用mat打开dump文件"}},[s._v("#")]),s._v(" 使用MAT打开Dump文件")]),s._v(" "),t("p",[s._v("打开 MAT ，选择 File –> Open File，打开刚刚的两个 dump 文件，"),t("strong",[s._v("我们先打开第一个 dump 文件")])]),s._v(" "),t("blockquote",[t("p",[s._v("点击 Open Heap Dump 也行")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/Java/20220124174907.png",alt:"image-20220124174904897"}})]),s._v(" "),t("p",[s._v("选择 Java Basics –> GC Roots")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/Java/20220124174930.png",alt:"image-20220124174929515"}})]),s._v(" "),t("p",[s._v("第一次捕捉堆内存快照时，GC Roots 中包含我们定义的两个局部变量，类型分别为 ArrayList 和 Date，Total:21")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/Java/20220124175340.png",alt:"image-20220124175339139"}})]),s._v(" "),t("p",[s._v("打开第二个 dump 文件，第二次捕获内存快照时，由于两个局部变量引用的对象被释放，所以这两个局部变量不再作为 GC Roots ，从 "),t("code",[s._v("Total Entries = 19")]),s._v(" 也可以看出（少了两个 GC Roots）")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/Java/20220124175414.png",alt:"image-20220124175413445"}})]),s._v(" "),t("h3",{attrs:{id:"jprofiler的gc-roots溯源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jprofiler的gc-roots溯源"}},[s._v("#")]),s._v(" JProfiler的GC Roots溯源")]),s._v(" "),t("p",[s._v("我们在实际的开发中，一般不会查找全部的 GC Roots，可能只是查找某个对象的整个链路，或者称为 GC Roots 溯源，这个时候，我们就可以使用 JProfiler")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/Java/20220124175522.png",alt:"image-20200712113256075"}})]),s._v(" "),t("h3",{attrs:{id:"如何判断什么原因造成oom"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何判断什么原因造成oom"}},[s._v("#")]),s._v(" 如何判断什么原因造成OOM")]),s._v(" "),t("p",[s._v("当我们程序出现 OOM 的时候，我们就需要进行排查，我们首先使用下面的例子进行说明")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * 内存溢出排查\n * -Xms8m -Xmx8m -XX:HeapDumpOnOutOfMemoryError\n */")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HeapOOM")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建1M的文件")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" buffer "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArrayList")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HeapOOM")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" list "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArrayList")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" count "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                list"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HeapOOM")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                count"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Exception")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getStackTrace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"count:"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" count"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br")])]),t("p",[s._v("上述代码就是不断的创建一个 1M 小字节数组，然后让内存溢出，我们需要限制一下内存大小，同时使用 "),t("code",[s._v("HeapDumpOnOutOfMemoryError")]),s._v(" 参数在出错后生成 dump 文件，用于记录信息")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Xms8m")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Xmx8m")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("XX")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HeapDumpOnOutOfMemoryError")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("我们将生成的 dump 文件打开，然后点击 Biggest Objects 就能够看到超大对象（如下 ArrayLisy 占了 89% 空间）")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/Java/20220116163641.png",alt:"image-20200712150229048"}})]),s._v(" "),t("p",[s._v("然后我们通过线程，还能够定位到哪里出现 OOM")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/Java/20220116163642.png",alt:"image-20200712150303710"}})]),s._v(" "),t("h2",{attrs:{id:"清除阶段概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#清除阶段概述"}},[s._v("#")]),s._v(" 清除阶段概述")]),s._v(" "),t("p",[s._v("当成功区分出内存中存活对象和死亡对象后，GC 接下来的任务就是执行垃圾回收，释放掉无用对象所占用的内存空间，以便有足够的可用内存空间为新对象分配内存。目前在 JVM 中比较常见的三种垃圾收集算法是：")]),s._v(" "),t("ul",[t("li",[s._v("标记一清除算法（Mark-Sweep）")]),s._v(" "),t("li",[s._v("复制算法（copying）")]),s._v(" "),t("li",[s._v("标记-压缩算法（Mark-Compact）")])]),s._v(" "),t("h2",{attrs:{id:"清除阶段-标记-清除算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#清除阶段-标记-清除算法"}},[s._v("#")]),s._v(" 清除阶段：标记-清除算法")]),s._v(" "),t("p",[s._v("标记-清除算法（Mark-Sweep）是一种非常基础和常见的垃圾收集算法，该算法被 J.McCarthy 等人在 1960 年提出并并应用于 Lisp 语言。")]),s._v(" "),t("h3",{attrs:{id:"执行过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#执行过程"}},[s._v("#")]),s._v(" 执行过程")]),s._v(" "),t("p",[s._v("当堆中的有效内存空间（available memory）被耗尽的时候，就会停止整个程序（也被称为 stop the world），然后进行两项工作，第一项则是标记，第二项则是清除。")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("标记")]),s._v("：Collector 从引用根节点开始遍历，"),t("strong",[s._v("标记所有被引用的对象")]),s._v("。一般是在对象的 Header 中记录为可达对象。\n"),t("ul",[t("li",[t("strong",[s._v("标记的是引用的对象（存活对象），不是垃圾")])])])]),s._v(" "),t("li",[t("strong",[s._v("清除")]),s._v("：Collector 对堆内存从头到尾进行线性的遍历，如果发现某个对象在其 Header 中没有标记为可达对象，则将其回收")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/Java/20220116163718.png",alt:"image-20200712150935078"}})]),s._v(" "),t("h3",{attrs:{id:"什么是清除"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是清除"}},[s._v("#")]),s._v(" 什么是清除？")]),s._v(" "),t("p",[s._v("这里所谓的清除并不是真的置空，而是把需要清除的对象地址保存在空闲的地址列表里。下次有新对象需要加载时，判断垃圾的位置空间是否够，如果够，就存放覆盖原有的地址。")]),s._v(" "),t("p",[s._v("关于空闲列表是在为对象分配内存的时候提过")]),s._v(" "),t("ul",[t("li",[s._v("如果内存规整\n"),t("ul",[t("li",[s._v("采用指针碰撞的方式进行内存分配")])])]),s._v(" "),t("li",[s._v("如果内存不规整\n"),t("ul",[t("li",[s._v("虚拟机需要维护一个列表")]),s._v(" "),t("li",[s._v("空闲列表分配")])])])]),s._v(" "),t("h3",{attrs:{id:"缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#缺点"}},[s._v("#")]),s._v(" 缺点")]),s._v(" "),t("ul",[t("li",[s._v("标记清除算法的效率不算高（标记阶段遍历一次，清除阶段又遍历一次）")]),s._v(" "),t("li",[s._v("在进行 GC 的时候，需要停止整个应用程序，用户体验较差")]),s._v(" "),t("li",[s._v("这种方式清理出来的空闲内存是不连续的，产生内碎片，需要维护一个空闲列表（类似逻辑删除，最后真正删除是被覆盖的时候）")])]),s._v(" "),t("h2",{attrs:{id:"清除阶段-复制算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#清除阶段-复制算法"}},[s._v("#")]),s._v(" 清除阶段：复制算法")]),s._v(" "),t("h3",{attrs:{id:"背景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[s._v("#")]),s._v(" 背景")]),s._v(" "),t("p",[s._v("为了解决标记-清除算法在垃圾收集效率方面的缺陷，M.L.Minsky 于 1963 年发表了著名的论文，使用双存储区的 Lisp 语言垃圾收集器 CA LISP Garbage Collector Algorithm Using Serial Secondary Storage。M.L.Minsky 在该论文中描述的算法被人们称为复制（Copying）算法，它也被 M.L.Minsky 本人成功地引入到了 Lisp 语言的一个实现版本中。")]),s._v(" "),t("h3",{attrs:{id:"核心思想"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#核心思想"}},[s._v("#")]),s._v(" 核心思想")]),s._v(" "),t("p",[s._v("将活着的内存空间分为两块，每次只使用其中一块，在垃圾回收时将正在使用的内存中的存活对象复制到未被使用的内存块中，之后清除正在使用的内存块中的所有对象，交换两个内存的角色，最后完成垃圾回收")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/Java/20220116163759.png",alt:"image-20200712151916991"}})]),s._v(" "),t("p",[s._v("把可达的对象，直接复制到另外一个区域中复制完成后，A 区就没有用了，里面的对象可以直接清除掉，其实里面的新生代的 Eden 区和两个 S0 和 S1 区里面就用到了复制算法")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/Java/20220116163801.png",alt:"image-20200712152029615"}})]),s._v(" "),t("h3",{attrs:{id:"优点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#优点"}},[s._v("#")]),s._v(" 优点")]),s._v(" "),t("ul",[t("li",[s._v("没有标记和清除过程，实现简单，运行高效")]),s._v(" "),t("li",[s._v("复制过去以后保证空间的连续性，不会出现「碎片」问题")])]),s._v(" "),t("h3",{attrs:{id:"缺点-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#缺点-2"}},[s._v("#")]),s._v(" 缺点")]),s._v(" "),t("ul",[t("li",[s._v("此算法的缺点也是很明显的，就是需要两倍的内存空间")]),s._v(" "),t("li",[s._v("对于 G1 这种分拆成为大量 Region 的 GC，复制而不是移动，意味着 GC 需要维护 Region 之间对象引用关系，不管是内存占用或者时间开销也不小")])]),s._v(" "),t("h3",{attrs:{id:"注意-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注意-3"}},[s._v("#")]),s._v(" 注意")]),s._v(" "),t("p",[s._v("如果系统中的垃圾对象很少，复制算法不会很理想，复制算法需要复制的存活对象数量并不会太大，或者说非常低才行（老年代大量的对象存活，那么复制的对象将会有很多，效率会很低）。")]),s._v(" "),t("p",[s._v("在新生代，对常规应用的垃圾回收，一次通常可以回收 70% - 99% 的内存空间。回收性价比很高。所以现在的商业虚拟机都是用这种收集算法回收新生代。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/Java/20220116163851.png",alt:"image-20200712152847218"}})]),s._v(" "),t("h2",{attrs:{id:"清除阶段-标记-整理算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#清除阶段-标记-整理算法"}},[s._v("#")]),s._v(" 清除阶段：标记-整理算法")]),s._v(" "),t("p",[s._v("标记-整理算法也叫标记-压缩算法。")]),s._v(" "),t("h3",{attrs:{id:"背景-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#背景-2"}},[s._v("#")]),s._v(" 背景")]),s._v(" "),t("p",[s._v("复制算法的高效性是建立在存活对象少、垃圾对象多的前提下的。这种情况在新生代经常发生，但是在老年代，更常见的情况是大部分对象都是存活对象。如果依然使用复制算法，由于存活对象较多，复制的成本也将很高。因此，"),t("strong",[s._v("基于老年代垃圾回收的特性，需要使用其他的算法")]),s._v("。")]),s._v(" "),t("p",[s._v("标记一清除算法的确可以应用在老年代中，但是该算法不仅执行效率低下，而且在执行完内存回收后还会产生内存碎片，所以 JVM 的设计者需要在此基础之上进行改进。标记-压缩（Mark-Compact）算法由此诞生。")]),s._v(" "),t("p",[s._v("1970 年前后，G.L.Steele、C.J.Chene 和 D.s.Wise 等研究者发布标记-压缩算法。在许多现代的垃圾收集器中，人们都使用了标记-压缩算法或其改进版本。")]),s._v(" "),t("h3",{attrs:{id:"执行过程-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#执行过程-2"}},[s._v("#")]),s._v(" 执行过程")]),s._v(" "),t("p",[s._v("第一阶段和标记清除算法一样，从根节点开始标记所有被引用对象")]),s._v(" "),t("p",[s._v("第二阶段将所有的存活对象压缩到内存的一端，按顺序排放。之后，清理边界外所有的空间。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/Java/20220116163849.png",alt:"image-20200712153236508"}})]),s._v(" "),t("h3",{attrs:{id:"标清和标整的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#标清和标整的区别"}},[s._v("#")]),s._v(" 标清和标整的区别")]),s._v(" "),t("p",[s._v("标记-压缩算法的最终效果等同于标记-清除算法执行完成后，再进行一次内存碎片整理，因此，也可以把它称为标记-清除-压缩（Mark-Sweep-Compact）算法。")]),s._v(" "),t("p",[s._v("二者的本质差异在于标记-清除算法是一种非移动式的回收算法，标记-压缩是移动式的。是否移动回收后的存活对象是一项优缺点并存的风险决策。可以看到，标记的存活对象将会被整理，按照内存地址依次排列，而未被标记的内存会被清理掉。如此一来，当我们需要给新对象分配内存时，JVM 只需要持有一个内存的起始地址即可，这比维护一个空闲列表显然少了许多开销。")]),s._v(" "),t("h3",{attrs:{id:"标整的优缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#标整的优缺点"}},[s._v("#")]),s._v(" 标整的优缺点")]),s._v(" "),t("blockquote",[t("p",[s._v("优点")])]),s._v(" "),t("ul",[t("li",[s._v("消除了标记-清除算法当中，内存区域分散的缺点，我们需要给新对象分配内存时，JVM 只需要持有一个内存的起始地址即可")]),s._v(" "),t("li",[s._v("消除了复制算法当中，内存减半的高额代价")])]),s._v(" "),t("blockquote",[t("p",[s._v("缺点")])]),s._v(" "),t("ul",[t("li",[s._v("从效率上来说，标记-整理算法要低于复制算法")]),s._v(" "),t("li",[s._v("移动对象的同时，如果对象被其他对象引用，则还需要调整引用的地址")]),s._v(" "),t("li",[s._v("移动过程中，需要全程暂停用户应用程序。即：STW")])]),s._v(" "),t("h2",{attrs:{id:"清除阶段方法小结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#清除阶段方法小结"}},[s._v("#")]),s._v(" 清除阶段方法小结")]),s._v(" "),t("p",[s._v("效率上来说，复制算法是当之无愧的老大，但是却浪费了太多内存。")]),s._v(" "),t("p",[s._v("而为了尽量兼顾上面提到的三个指标，标记-整理算法相对来说更平滑一些，但是效率上不尽如人意，它比复制算法多了一个标记的阶段，比标记-清除多了一个整理内存的阶段。")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th"),s._v(" "),t("th",[s._v("标记清除")]),s._v(" "),t("th",[s._v("标记整理")]),s._v(" "),t("th",[s._v("复制")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[t("strong",[s._v("速率")])]),s._v(" "),t("td",[s._v("中等")]),s._v(" "),t("td",[s._v("最慢")]),s._v(" "),t("td",[s._v("最快")])]),s._v(" "),t("tr",[t("td",[t("strong",[s._v("空间开销")])]),s._v(" "),t("td",[s._v("少（但会堆积碎片）")]),s._v(" "),t("td",[s._v("少（不堆积碎片）")]),s._v(" "),t("td",[s._v("通常需要活对象的 2 倍空间（不堆积碎片）")])]),s._v(" "),t("tr",[t("td",[t("strong",[s._v("移动对象")])]),s._v(" "),t("td",[s._v("否")]),s._v(" "),t("td",[s._v("是")]),s._v(" "),t("td",[s._v("是")])])])]),s._v(" "),t("p",[s._v("综合我们可以找到，没有最好的算法，只有最合适的算法。")]),s._v(" "),t("h2",{attrs:{id:"分代收集算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分代收集算法"}},[s._v("#")]),s._v(" 分代收集算法")]),s._v(" "),t("p",[s._v("前面所有这些算法中，并没有一种算法可以完全替代其他算法，它们都具有自己独特的优势和特点。分代收集算法应运而生。")]),s._v(" "),t("p",[s._v("分代收集算法，是基于这样一个事实：不同的对象的生命周期是不一样的。因此，"),t("strong",[s._v("不同生命周期的对象可以采取不同的收集方式，以便提高回收效率")]),s._v("。一般是把Java 堆分为新生代和老年代，这样就可以根据各个年代的特点使用不同的回收算法，以提高垃圾回收的效率。")]),s._v(" "),t("p",[s._v("在 Java 程序运行的过程中，会产生大量的对象，其中有些对象是与业务信息相关，比如 Http 请求中的 Session 对象、线程、Socket 连接，这类对象跟业务直接挂钩，因此生命周期比较长。但是还有一些对象，主要是程序运行过程中生成的临时变量，这些对象生命周期会比较短，比如：String 对象，由于其不变类的特性，系统会产生大量的这些对象，有些对象甚至只用一次即可回收。")]),s._v(" "),t("p",[s._v("目前几乎所有的 GC 都采用分代收集算法执行垃圾回收的。")]),s._v(" "),t("p",[s._v("在 HotSpot 中，基于分代的概念，GC 所使用的内存回收算法必须结合年轻代和老年代各自的特点。")]),s._v(" "),t("ul",[t("li",[s._v("年轻代（Young Gen）")])]),s._v(" "),t("p",[s._v("年轻代特点：区域相对老年代较小，对象生命周期短、存活率低，回收频繁。")]),s._v(" "),t("p",[s._v("使用算法：这种情况 "),t("strong",[s._v("复制算法")]),s._v(" 的回收整理，速度是最快的。复制算法的效率只和当前存活对象大小有关，因此很适用于年轻代的回收。而复制算法内存利用率不高的问题，通过 Hotspot 中的两个 Survivor 的设计得到缓解。")]),s._v(" "),t("ul",[t("li",[s._v("老年代（Tenured Gen）")])]),s._v(" "),t("p",[s._v("老年代特点：区域较大，对象生命周期长、存活率高，回收不及年轻代频繁。")]),s._v(" "),t("p",[s._v("使用算法：这种情况存在大量存活率高的对象，复制算法明显变得不合适。一般是由 "),t("strong",[s._v("标记-清除")]),s._v(" 或者是 "),t("strong",[s._v("标记-清除与标记-整理")]),s._v(" 的混合实现。")]),s._v(" "),t("ul",[t("li",[s._v("Mark（标记）阶段的开销与存活对象的数量成正比")]),s._v(" "),t("li",[s._v("Sweep（清除）阶段的开销与所管理区域的大小成正相关")]),s._v(" "),t("li",[s._v("Compact（压缩）阶段的开销与存活对象的数据成正比")])]),s._v(" "),t("p",[s._v("以 HotSpot 中的 CMS 回收器为例，CMS 是基于 Mark-Sweep（标记-清除）实现的，对于对象的回收效率很高。而对于碎片问题，CMS 采用基于 Mark-Compact 算法的 Serial Old 回收器作为补偿措施：当内存回收不佳（碎片导致的 Concurrent Mode Failure 时），将采用 Serial Old 执行 Full GC 以达到对老年代内存的整理。")]),s._v(" "),t("p",[s._v("分代的思想被现有的虚拟机广泛使用。几乎所有的垃圾回收器都区分新生代和老年代。")]),s._v(" "),t("h2",{attrs:{id:"增量收集算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#增量收集算法"}},[s._v("#")]),s._v(" 增量收集算法")]),s._v(" "),t("h3",{attrs:{id:"概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[s._v("#")]),s._v(" 概述")]),s._v(" "),t("p",[s._v("上述现有的算法，在垃圾回收过程中，应用软件将处于一种 stop the World 的状态。在 stop the World 状态下，应用程序所有的线程都会挂起，暂停一切正常的工作，等待垃圾回收的完成。如果垃圾回收时间过长，应用程序会被挂起很久，将严重影响用户体验或者系统的稳定性。为了解决这个问题，即对实时垃圾收集算法的研究直接导致了增量收集（Incremental Collecting）算法的诞生。")]),s._v(" "),t("p",[s._v("如果一次性将所有的垃圾进行处理，需要造成系统长时间的停顿，那么就可以让垃圾收集线程和应用程序线程交替执行。每次，垃圾收集线程只收集一小片区域的内存空间，接着切换到应用程序线程。依次反复，直到垃圾收集完成。")]),s._v(" "),t("p",[s._v("总的来说，增量收集算法的基础仍是传统的标记-清除和复制算法。"),t("strong",[s._v("增量收集算法通过对线程间冲突的妥善处理")]),s._v("，允许垃圾收集线程以分阶段的方式完成标记、清理或复制工作。")]),s._v(" "),t("h3",{attrs:{id:"缺点-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#缺点-3"}},[s._v("#")]),s._v(" 缺点")]),s._v(" "),t("p",[s._v("使用这种方式，由于在垃圾回收过程中，间断性地还执行了应用程序代码，所以能减少系统的停顿时间。但是，因为线程切换和上下文转换的消耗，会使得垃圾回收的总体成本上升，"),t("strong",[s._v("造成系统吞吐量的下降")]),s._v("。")]),s._v(" "),t("h2",{attrs:{id:"分区算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分区算法"}},[s._v("#")]),s._v(" 分区算法")]),s._v(" "),t("p",[s._v("一般来说，在相同条件下，堆空间越大，一次 GC 时所需要的时间就越长，有关 GC 产生的停顿也越长。为了更好地控制 GC 产生的停顿时间，将一块大的内存区域分割成多个小块，根据目标的停顿时间，每次合理地回收若干个小区间（Region），而不是整个堆空间，从而减少一次 GC 所产生的停顿。")]),s._v(" "),t("p",[s._v("分代算法将按照对象的生命周期长短划分成两个部分，分区算法将整个堆空间划分成连续的不同小区间。")]),s._v(" "),t("p",[s._v("每一个小区间都独立使用，独立回收。这种算法的好处是可以控制一次回收多少个小区间。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Kele-Bingtang/static/img/Java/20220116164038.png",alt:"image-20200712165318590"}})]),s._v(" "),t("h2",{attrs:{id:"写到最后"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#写到最后"}},[s._v("#")]),s._v(" 写到最后")]),s._v(" "),t("p",[s._v("注意，这些只是基本的算法思路，实际 GC 实现过程要复杂的多，目前还在发展中的前沿 GC 都是复合算法，并且并行和并发兼备。")])])}),[],!1,null,null,null);t.default=e.exports}}]);